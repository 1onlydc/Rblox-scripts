
--!strict
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local HttpService = game:GetService("HttpService")
local SoundService = game:GetService("SoundService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Enhanced Cherry Blossom theme colors - Refined palette for a more immersive, soft glow effect
local SAKURA_LIGHTEST = Color3.fromRGB(255, 248, 251)  -- Gentle light pink for backgrounds
local SAKURA_LIGHT = Color3.fromRGB(255, 230, 240)     -- Softer sakura pink for elements
local SAKURA_MEDIUM = Color3.fromRGB(255, 195, 215)    -- Medium pink with warmer tone
local SAKURA_DEEP = Color3.fromRGB(240, 145, 185)      -- Deep pink for depth and borders
local SAKURA_DARK = Color3.fromRGB(210, 120, 160)      -- Dark pink for strong contrast
local SAKURA_ACCENT = Color3.fromRGB(255, 175, 195)    -- Vibrant accent with subtle warmth
local WHITE = Color3.fromRGB(255, 255, 255)
local TEXT_COLOR = Color3.fromRGB(85, 55, 70)          -- Richer text color for better readability
local TEXT_COLOR_LIGHT = Color3.fromRGB(255, 255, 255)
local ACCENT_COLOR = Color3.fromRGB(255, 145, 175)     -- Warmer highlight for interactions
local BACKGROUND_SAKURA = Color3.fromRGB(255, 235, 245) -- Soft tint for backgrounds
local SHADOW_COLOR = Color3.fromRGB(50, 50, 50)        -- Softer shadow for less harshness
local LEAF_GREEN = Color3.fromRGB(140, 235, 140)       -- Vibrant green for accents

-- Constants for layout (smaller dimensions)
local WIDTH_MAIN = 600
local WIDTH_SIDE = 220
local GAP = 15
local HEIGHT = 400

-- Performance optimizations
local debounce = {}
local connections = {}

local function debounceCheck(id, cooldown)
    cooldown = cooldown or 0.5
    if debounce[id] and (os.clock() - debounce[id]) < cooldown then
        return true
    end
    debounce[id] = os.clock()
    return false
end

local function safeConnect(event, callback)
    local connection = event:Connect(callback)
    table.insert(connections, connection)
    return connection
end

local function cleanup()
    for _, connection in ipairs(connections) do
        connection:Disconnect()
    end
    if blur and blur.Parent then blur:Destroy() end
    if ScreenGui and ScreenGui.Parent then ScreenGui:Destroy() end
    if WatermarkGui and WatermarkGui.Parent then WatermarkGui:Destroy() end
    if StatusGui and StatusGui.Parent then StatusGui:Destroy() end
    if KeybindsGui and KeybindsGui.Parent then KeybindsGui:Destroy() end
end

-- Utility helpers
local function addCorner(obj, radius)
    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, radius or 6)
    c.Parent = obj
    return c
end

local function addStroke(obj, color, thickness)
    local s = Instance.new("UIStroke")
    s.Thickness = thickness or 1
    s.Color = color or SAKURA_DEEP
    s.Transparency = 0.2
    s.Parent = obj
    return s
end

local function addGradient(obj, color1, color2, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new(color1, color2)
    gradient.Rotation = rotation or 90
    gradient.Parent = obj
    return gradient
end

-- Create Watermark
local WatermarkGui = Instance.new("ScreenGui")
WatermarkGui.Name = "WatermarkClock"
WatermarkGui.ResetOnSpawn = false
WatermarkGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
WatermarkGui.Parent = PlayerGui

local Watermark = Instance.new("Frame")
Watermark.Name = "Watermark"
Watermark.Parent = WatermarkGui
Watermark.Size = UDim2.new(0, 200, 0, 24)
Watermark.Position = UDim2.new(0, 8, 0, 8)
Watermark.BackgroundColor3 = SAKURA_LIGHTEST
Watermark.BackgroundTransparency = 0.05
addCorner(Watermark, 6)
addStroke(Watermark, SAKURA_DEEP, 1)
addGradient(Watermark, SAKURA_LIGHTEST, SAKURA_LIGHT, 90)

local UsernameLabel = Instance.new("TextLabel")
UsernameLabel.Parent = Watermark
UsernameLabel.Size = UDim2.new(0.5, -5, 1, 0)
UsernameLabel.Position = UDim2.new(0, 5, 0, 0)
UsernameLabel.BackgroundTransparency = 1
UsernameLabel.Font = Enum.Font.GothamMedium
UsernameLabel.TextSize = 12
UsernameLabel.TextColor3 = TEXT_COLOR
UsernameLabel.TextXAlignment = Enum.TextXAlignment.Left
UsernameLabel.Text = Player.Name

local TimeLabel = Instance.new("TextLabel")
TimeLabel.Parent = Watermark
TimeLabel.Size = UDim2.new(0.5, -5, 1, 0)
TimeLabel.Position = UDim2.new(0.5, 0, 0, 0)
TimeLabel.BackgroundTransparency = 1
TimeLabel.Font = Enum.Font.GothamMedium
TimeLabel.TextColor3 = TEXT_COLOR
TimeLabel.TextXAlignment = Enum.TextXAlignment.Right
TimeLabel.TextSize = 11

local function updateTime()
    local time = os.date("*t")
    local hour = string.format("%02d", time.hour)
    local min = string.format("%02d", time.min)
    local sec = string.format("%02d", time.sec)
    local day = os.date("%A"):sub(1, 3)
    TimeLabel.Text = string.format("%s:%s:%s | %s", hour, min, sec, day)
end

spawn(function()
    while Watermark and Watermark.Parent do
        updateTime()
        UsernameLabel.Text = Player.Name
        wait(1)
    end
end)

-- Create NerdWare Status Bar
local StatusGui = Instance.new("ScreenGui")
StatusGui.Name = "NerdWareStatusBar"
StatusGui.ResetOnSpawn = false
StatusGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
StatusGui.Parent = PlayerGui

local NerdWareStatusBar = Instance.new("Frame")
NerdWareStatusBar.Name = "StatusBar"
NerdWareStatusBar.Parent = StatusGui
NerdWareStatusBar.Size = UDim2.new(0, 200, 0, 20)
NerdWareStatusBar.Position = UDim2.new(0, 8, 0, 36)
NerdWareStatusBar.BackgroundColor3 = SAKURA_LIGHTEST
NerdWareStatusBar.BackgroundTransparency = 0.05
addCorner(NerdWareStatusBar, 6)
addStroke(NerdWareStatusBar, SAKURA_DEEP, 1)
addGradient(NerdWareStatusBar, SAKURA_LIGHTEST, SAKURA_LIGHT, 90)

local StatusText = Instance.new("TextLabel")
StatusText.Parent = NerdWareStatusBar
StatusText.Size = UDim2.new(1, -8, 1, 0)
StatusText.Position = UDim2.new(0, 4, 0, 0)
StatusText.BackgroundTransparency = 1
StatusText.Font = Enum.Font.GothamMedium
StatusText.TextSize = 12
StatusText.TextColor3 = TEXT_COLOR
StatusText.TextXAlignment = Enum.TextXAlignment.Left
StatusText.Text = "FPS: -- | SakuraUI"

local function updateBarSize()
    local padding = 10
    local textWidth = StatusText.TextBounds.X
    NerdWareStatusBar.Size = UDim2.new(0, textWidth + padding, 0, 20)
end

local lastFpsUpdate = 0
local fps = 60
RunService.Heartbeat:Connect(function(dt)
    fps = 1 / dt
    if os.clock() - lastFpsUpdate >= 0.5 then
        StatusText.Text = string.format("FPS: %.0f | SakuraUI", fps)
        updateBarSize()
        lastFpsUpdate = os.clock()
    end
end)

-- Keybinds GUI
local KeybindsGui = Instance.new("ScreenGui")
KeybindsGui.Name = "KeybindsUI"
KeybindsGui.ResetOnSpawn = false
KeybindsGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
KeybindsGui.Parent = PlayerGui

local KeybindFrame = Instance.new("Frame")
KeybindFrame.Name = "KeybindList"
KeybindFrame.Parent = KeybindsGui
KeybindFrame.Size = UDim2.new(0, 200, 0, 110)
KeybindFrame.AnchorPoint = Vector2.new(0, 0.5)
KeybindFrame.Position = UDim2.new(0, 8, 0.5, 0)
KeybindFrame.BackgroundColor3 = SAKURA_LIGHTEST
KeybindFrame.BackgroundTransparency = 0.05
addCorner(KeybindFrame, 6)
addStroke(KeybindFrame, SAKURA_DEEP, 1)
addGradient(KeybindFrame, SAKURA_LIGHTEST, SAKURA_LIGHT, 90)

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Parent = KeybindFrame
Title.Size = UDim2.new(1, -10, 0, 20)
Title.Position = UDim2.new(0, 5, 0, 2)
Title.BackgroundTransparency = 1
Title.Text = "Keybinds"
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Font = Enum.Font.GothamMedium
Title.TextSize = 14
Title.TextColor3 = TEXT_COLOR

local Content = Instance.new("Frame")
Content.Name = "Content"
Content.Parent = KeybindFrame
Content.Position = UDim2.new(0, 5, 0, 25)
Content.Size = UDim2.new(1, -10, 1, -30)
Content.BackgroundTransparency = 1

local padding = Instance.new("UIPadding")
padding.PaddingLeft = UDim.new(0, 5)
padding.PaddingRight = UDim.new(0, 5)
padding.Parent = Content

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = Content
UIListLayout.Padding = UDim.new(0, 4)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

local keybinds = {}

local function AddKeybind(mode, name, key)
    local KeyLabel = Instance.new("TextLabel")
    KeyLabel.Parent = Content
    KeyLabel.Size = UDim2.new(1, 0, 0, 18)
    KeyLabel.BackgroundTransparency = 1
    KeyLabel.TextXAlignment = Enum.TextXAlignment.Left
    KeyLabel.Font = Enum.Font.GothamMedium
    KeyLabel.TextSize = 12
    KeyLabel.TextColor3 = TEXT_COLOR
    KeyLabel.Text = "(" .. mode .. ") " .. name .. " - " .. key

    table.insert(keybinds, {
        label = KeyLabel,
        keyCode = Enum.KeyCode[key],
        mode = mode:lower()
    })

    return KeyLabel
end

AddKeybind("held", "Jump Boost", "Space")
AddKeybind("toggle", "NoClip", "N")
AddKeybind("press", "Reset Character", "R")

local function flashKeybind(keyCode, duration)
    for _, keybind in ipairs(keybinds) do
        if keybind.keyCode == keyCode then
            local originalColor = keybind.label.TextColor3
            keybind.label.TextColor3 = LEAF_GREEN
            task.delay(duration, function()
                if keybind.label and keybind.label.Parent then
                    keybind.label.TextColor3 = originalColor
                end
            end)
        end
    end
end

local function updateKeybindStatus(keyCode, isActive)
    for _, keybind in ipairs(keybinds) do
        if keybind.keyCode == keyCode then
            keybind.label.TextColor3 = isActive and LEAF_GREEN or TEXT_COLOR
        end
    end
end

local function handleInput(input, gameProcessed)
    if gameProcessed then return end
    for _, keybind in ipairs(keybinds) do
        if input.KeyCode == keybind.keyCode then
            if keybind.mode == "held" then
                if input.UserInputState == Enum.UserInputState.Begin then
                    updateKeybindStatus(keybind.keyCode, true)
                elseif input.UserInputState == Enum.UserInputState.End then
                    updateKeybindStatus(keybind.keyCode, false)
                end
            elseif keybind.mode == "toggle" then
                if input.UserInputState == Enum.UserInputState.Begin then
                    local isActive = not (keybind.label.TextColor3 == LEAF_GREEN)
                    updateKeybindStatus(keybind.keyCode, isActive)
                    if isActive then flashKeybind(keybind.keyCode, 0.3) end
                end
            elseif keybind.mode == "press" then
                if input.UserInputState == Enum.UserInputState.Begin then
                    flashKeybind(keybind.keyCode, 0.3)
                end
            end
        end
    end
end

UserInputService.InputBegan:Connect(handleInput)
UserInputService.InputEnded:Connect(handleInput)

local dragging, dragInput, startPos, startInputPos
KeybindFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        startPos = KeybindFrame.Position
        startInputPos = input.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)

KeybindFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - startInputPos
        KeybindFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Notification System
local function showNotification(title, message, duration, notifType)
    duration = duration or 3
    notifType = notifType or "info"
    local colorMap = {
        info = SAKURA_MEDIUM,
        success = Color3.fromRGB(50, 210, 120),
        warning = Color3.fromRGB(245, 200, 20),
        error = Color3.fromRGB(235, 80, 65)
    }
    local iconMap = {
        info = "ℹ️",
        success = "✅",
        warning = "⚠️",
        error = "❌"
    }
    local accentColor = colorMap[notifType] or colorMap.info
    local icon = iconMap[notifType] or iconMap.info

    local notification = Instance.new("TextButton")
    notification.Name = "Notification"
    notification.Parent = ScreenGui
    notification.Size = UDim2.new(0, 320, 0, 85)
    notification.Position = UDim2.new(1, 0, 0.85, 0)
    notification.BackgroundColor3 = SAKURA_LIGHTEST
    notification.BackgroundTransparency = 0.02
    notification.Text = ""
    notification.AutoButtonColor = false
    notification:SetAttribute("Created", os.clock())
    addCorner(notification, 12)
    addStroke(notification, SAKURA_DEEP, 1.5, 0.15)
    addAdvancedGradient(notification, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_LIGHTEST}, 135)

    local accentBar = Instance.new("Frame")
    accentBar.Parent = notification
    accentBar.Size = UDim2.new(0, 6, 1, 0)
    accentBar.Position = UDim2.new(0, 0, 0, 0)
    accentBar.BackgroundColor3 = accentColor
    addCorner(accentBar, 4)
    addGradient(accentBar, accentColor, Color3.new(accentColor.R * 0.7, accentColor.G * 0.7, accentColor.B * 0.7), 0)

    local iconLabel = Instance.new("TextLabel")
    iconLabel.Parent = notification
    iconLabel.Size = UDim2.new(0, 30, 0, 30)
    iconLabel.Position = UDim2.new(0, 15, 0, 10)
    iconLabel.BackgroundTransparency = 1
    iconLabel.Text = icon
    iconLabel.Font = Enum.Font.GothamBold
    iconLabel.TextSize = 20
    iconLabel.TextColor3 = accentColor

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Parent = notification
    titleLabel.Size = UDim2.new(1, -60, 0, 25)
    titleLabel.Position = UDim2.new(0, 50, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 15
    titleLabel.TextColor3 = TEXT_COLOR
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local messageLabel = Instance.new("TextLabel")
    messageLabel.Parent = notification
    messageLabel.Size = UDim2.new(1, -60, 0, 40)
    messageLabel.Position = UDim2.new(0, 50, 0, 35)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextSize = 13
    messageLabel.TextColor3 = Color3.new(TEXT_COLOR.R * 0.7, TEXT_COLOR.G * 0.7, TEXT_COLOR.B * 0.7)
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextWrapped = true

    local entranceInfo = TweenInfo.new(0.45, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    TweenService:Create(notification, entranceInfo, {
        Position = UDim2.new(1, -335, 0.85, 0)
    }):Play()

    addDoubleClick(notification, function()
        local dismissInfo = TweenInfo.new(0.25)
        TweenService:Create(notification, dismissInfo, {
            BackgroundTransparency = 1,
            Size = UDim2.new(0, 0, 0, 0)
        }):Play()
        task.delay(0.25, function()
            if notification.Parent then notification:Destroy() end
        end)
    end)

    task.delay(duration, function()
        if notification.Parent then
            local exitInfo = TweenInfo.new(0.35, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
            TweenService:Create(notification, exitInfo, {
                Position = UDim2.new(1, 25, 0.85, 0),
                BackgroundTransparency = 1
            }):Play()
            task.delay(0.35, function()
                if notification.Parent then notification:Destroy() end
            end)
        end
    end)

    return notification
end

-- =============================================================================
-- ADVANCED ANIMATION SYSTEM (Smoother transitions)
-- =============================================================================

local Panels = {}

local function transitionToPanel(panelName)
    local targetPanel = Panels[panelName]
    if not targetPanel or targetPanel.panel.Visible then return end
    
    local currentPanel = nil
    for name, panelData in pairs(Panels) do
        if panelData.panel.Visible then
            currentPanel = panelData
            break
        end
    end
    
    if currentPanel then
        local outInfo = TweenInfo.new(0.45, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        TweenService:Create(currentPanel.panel, outInfo, {
            Position = UDim2.new(-0.25, 0, 0, 0),
            BackgroundTransparency = 0.85
        }):Play()
        TweenService:Create(currentPanel.shadow, outInfo, {
            BackgroundTransparency = 1
        }):Play()
        
        task.delay(0.45, function() 
            if currentPanel.panel and currentPanel.panel.Parent then 
                currentPanel.panel.Visible = false 
                currentPanel.shadow.Visible = false
            end 
        end)
    end
    
    targetPanel.panel.Visible = true
    targetPanel.shadow.Visible = true
    targetPanel.panel.Position = UDim2.new(1.25, 0, 0, 0)
    targetPanel.panel.BackgroundTransparency = 0.85
    targetPanel.shadow.BackgroundTransparency = 1
    
    local inInfo = TweenInfo.new(0.55, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    TweenService:Create(targetPanel.panel, inInfo, {
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 0.01
    }):Play()
    TweenService:Create(targetPanel.shadow, inInfo, {
        BackgroundTransparency = 0.85
    }):Play()
end

-- Improved hover animations with subtle scale and color shift
local function enhanceHoverEffects()
    for _, descendant in pairs(ScreenGui:GetDescendants()) do
        if descendant:IsA("TextButton") or descendant:IsA("ImageButton") then
            local originalRotation = descendant.Rotation
            local originalColor = descendant.BackgroundColor3
            
            descendant.MouseEnter:Connect(function()
                TweenService:Create(descendant, TweenInfo.new(0.2, Enum.EasingStyle.Sine), {
                    Rotation = originalRotation + math.random(-2, 2),
                    BackgroundColor3 = originalColor:lerp(ACCENT_COLOR, 0.1)
                }):Play()
                
                TweenService:Create(descendant, TweenInfo.new(0.25), {
                    Size = descendant.Size + UDim2.new(0, 5, 0, 5)
                }):Play()
            end)
            
            descendant.MouseLeave:Connect(function()
                TweenService:Create(descendant, TweenInfo.new(0.3, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
                    Rotation = originalRotation,
                    BackgroundColor3 = originalColor,
                    Size = descendant.Size - UDim2.new(0, 5, 0, 5)
                }):Play()
            end)
        end
    end
end

-- =============================================================================
-- PERFORMANCE OPTIMIZATIONS (Improved FPS monitoring)
-- =============================================================================

local function cleanupUnusedAssets()
    if Particles and Particles.Parent then
        for _, particle in ipairs(Particles:GetChildren()) do
            if particle:IsA("Frame") then
                if not particle:GetAttribute("Age") then
                    particle:SetAttribute("Age", os.clock())
                end
                
                local age = os.clock() - particle:GetAttribute("Age")
                if age > 12 then
                    particle:Destroy()
                end
            end
        end
    end
    
    for _, child in ipairs(ScreenGui:GetChildren()) do
        if child.Name == "Notification" and os.clock() - (child:GetAttribute("Created") or 0) > 8 then
            child:Destroy()
        end
    end
end

local function adaptiveQuality()
    local targetFPS = 60
    local lastFPSCheck = 0
    local currentFPS = 60
    
    local connection
    connection = RunService.Heartbeat:Connect(function(delta)
        if os.clock() - lastFPSCheck > 0.8 then
            currentFPS = math.floor(1 / delta)
            lastFPSCheck = os.clock()
            
            if currentFPS < targetFPS * 0.65 then
                MAX_PARTICLES = 20
            elseif currentFPS < targetFPS * 0.85 then
                MAX_PARTICLES = 30
            else
                MAX_PARTICLES = 35
            end
        end
    end)
    
    table.insert(connections, connection)
end

-- =============================================================================
-- VISUAL EFFECTS SETUP (Enhanced blur and tint)
-- =============================================================================

local blur = Instance.new("BlurEffect")
blur.Name = "ModernUIBlur"
blur.Size = 0
blur.Parent = Lighting

local colorCorrection = Instance.new("ColorCorrectionEffect")
colorCorrection.Name = "SakuraTint"
colorCorrection.TintColor = BACKGROUND_SAKURA
colorCorrection.Brightness = 0.12
colorCorrection.Contrast = 0.18
colorCorrection.Saturation = 0.32
colorCorrection.Enabled = false
colorCorrection.Parent = Lighting

local function setEffects(enable)
    if debounceCheck("setEffects", 0.1) then return end
    local blurTarget = enable and 22 or 0
    TweenService:Create(blur, TweenInfo.new(0.55, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = blurTarget}):Play()
    colorCorrection.Enabled = enable
end

-- Create more parallax layers for deeper effect
for i = 1, 5 do
    createParallaxLayer(i, 0.22 + (i * 0.12))
end

createAnimatedPattern()

-- =============================================================================
-- MAIN UI COMPONENTS (Improved layouts and styling)
-- =============================================================================

local NavBar = Instance.new("Frame")
NavBar.Name = "NavBar"
NavBar.Parent = MainContainer
NavBar.Size = UDim2.new(0, WIDTH_SIDE_BAR, 0, 620)
NavBar.Position = UDim2.new(0, 12, 0.5, -310)
NavBar.BackgroundColor3 = SAKURA_LIGHTEST
NavBar.BackgroundTransparency = 0.03
NavBar.BorderSizePixel = 0
addCorner(NavBar, 28)
addStroke(NavBar, SAKURA_DEEP, 2.2, 0.12)
addAdvancedGradient(NavBar, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHT}, 25)

local navShadow = Instance.new("Frame")
navShadow.Parent = MainContainer
navShadow.Size = NavBar.Size
navShadow.Position = UDim2.new(0, 15, 0.5, -307)
navShadow.BackgroundColor3 = SHADOW_COLOR
navShadow.BackgroundTransparency = 0.88
navShadow.BorderSizePixel = 0
navShadow.ZIndex = NavBar.ZIndex - 1
addCorner(navShadow, 28)

local navButtons = {
    {Name = "Aimbot", Icon = "rbxassetid://6031071053", Tooltip = "Advanced aimbot settings and configurations"},
    {Name = "Visuals", Icon = "rbxassetid://6031094670", Tooltip = "Visual enhancements and ESP options"},
    {Name = "Misc", Icon = "rbxassetid://6031091004", Tooltip = "Miscellaneous features and utilities"},
    {Name = "Other", Icon = "rbxassetid://6031094679", Tooltip = "Additional tools and scripts"},
    {Name = "Settings", Icon = "rbxassetid://6031091001", Tooltip = "UI and game settings"},
}

local TabsContainer = Instance.new("Frame")
TabsContainer.Name = "TabsContainer"
TabsContainer.Parent = NavBar
TabsContainer.Size = UDim2.new(1, 0, 1, -120)
TabsContainer.Position = UDim2.new(0, 0, 0, 22)
TabsContainer.BackgroundTransparency = 1

local tabsLayout = Instance.new("UIListLayout")
tabsLayout.Parent = TabsContainer
tabsLayout.FillDirection = Enum.FillDirection.Vertical
tabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
tabsLayout.VerticalAlignment = Enum.VerticalAlignment.Center
tabsLayout.Padding = UDim.new(0, 22)
tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder

local PanelsContainer = Instance.new("Frame")
PanelsContainer.Name = "PanelsContainer"
PanelsContainer.Parent = MainContainer
PanelsContainer.Size = UDim2.new(0, WIDTH_MAIN, 0, HEIGHT)
PanelsContainer.Position = UDim2.new(0, WIDTH_SIDE_BAR + GAP, 0.25, 0)
PanelsContainer.BackgroundTransparency = 1
PanelsContainer.Visible = true

local activeTab = nil

local SIZE_NORMAL = UDim2.new(1, -10, 0, 40)
local SIZE_HOVER = UDim2.new(1, -6, 0, 44)
local SIZE_ACTIVE = UDim2.new(1, -2, 0, 48)
local SIZE_ACTIVE_HOVER = UDim2.new(1, 2, 0, 52)

-- Improved panels with better gradients and shadows
local Panels = {}
do
    for _, info in ipairs(navButtons) do
        local panel = Instance.new("Frame")
        panel.Name = info.Name .. "Panel"
        panel.Parent = PanelsContainer
        panel.Size = UDim2.new(0, WIDTH_MAIN, 0, HEIGHT)
        panel.Position = UDim2.new(0, 0, 0, 0)
        panel.BackgroundColor3 = SAKURA_LIGHTEST
        panel.BackgroundTransparency = 0.03
        addCorner(panel, 14)
        addAdvancedGradient(panel, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHTEST}, 130)
        addStroke(panel, SAKURA_DEEP, 1.2, 0.12)
        panel.Visible = (info.Name == "Aimbot")

        local panelShadow = Instance.new("Frame")
        panelShadow.Parent = PanelsContainer
        panelShadow.Size = panel.Size
        panelShadow.Position = UDim2.new(0, 3, 0, 3)
        panelShadow.BackgroundColor3 = SHADOW_COLOR
        panelShadow.BackgroundTransparency = 0.9
        panelShadow.BorderSizePixel = 0
        panelShadow.ZIndex = panel.ZIndex - 1
        addCorner(panelShadow, 14)
        panelShadow.Visible = panel.Visible

        local header = Instance.new("TextLabel")
        header.Name = "Header"
        header.Parent = panel
        header.Size = UDim2.new(1, -22, 0, 42)
        header.Position = UDim2.new(0, 11, 0, 6)
        header.BackgroundTransparency = 1
        header.Font = Enum.Font.GothamBlack
        header.TextSize = 19
        header.TextColor3 = TEXT_COLOR
        header.Text = info.Name
        header.TextXAlignment = Enum.TextXAlignment.Left

        createTooltip(header, info.Tooltip)

        safeConnect(header.MouseEnter, function()
            TweenService:Create(header, TweenInfo.new(0.22, Enum.EasingStyle.Sine), {TextColor3 = ACCENT_COLOR, TextSize = 20}):Play()
        end)

        safeConnect(header.MouseLeave, function()
            TweenService:Create(header, TweenInfo.new(0.22, Enum.EasingStyle.Sine), {TextColor3 = TEXT_COLOR, TextSize = 19}):Play()
        end)

        local contentFrame = Instance.new("ScrollingFrame")
        contentFrame.Parent = panel
        contentFrame.Size = UDim2.new(1, -22, 1, -50)
        contentFrame.Position = UDim2.new(0, 11, 0, 48)
        contentFrame.BackgroundTransparency = 1
        contentFrame.ScrollBarThickness = 4
        contentFrame.ScrollBarImageColor3 = SAKURA_MEDIUM
        contentFrame.CanvasSize = UDim2.new(0, 0, 0, 520)

        local listLayout = Instance.new("UIListLayout")
        listLayout.Parent = contentFrame
        listLayout.Padding = UDim.new(0, 9)
        listLayout.SortOrder = Enum.SortOrder.LayoutOrder

        Panels[info.Name] = {panel = panel, shadow = panelShadow}
    end
end

-- Improved SidePanel with enhanced 3D preview
local SidePanel = Instance.new("Frame")
SidePanel.Name = "SidePanel"
SidePanel.Parent = PanelsContainer
SidePanel.Size = UDim2.new(0, WIDTH_SIDE, 0, HEIGHT)
SidePanel.Position = UDim2.new(0, WIDTH_MAIN + GAP, 0, 0)
SidePanel.BackgroundColor3 = SAKURA_LIGHTEST
SidePanel.BackgroundTransparency = 0.03
addCorner(SidePanel, 14)
addAdvancedGradient(SidePanel, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHTEST}, 220)
addStroke(SidePanel, SAKURA_DEEP, 1.2, 0.12)
SidePanel.Visible = false

local sideShadow = Instance.new("Frame")
sideShadow.Parent = PanelsContainer
sideShadow.Size = SidePanel.Size
sideShadow.Position = UDim2.new(0, WIDTH_MAIN + GAP + 3, 0, 3)
sideShadow.BackgroundColor3 = SHADOW_COLOR
sideShadow.BackgroundTransparency = 0.9
sideShadow.BorderSizePixel = 0
sideShadow.ZIndex = SidePanel.ZIndex - 1
addCorner(sideShadow, 14)
sideShadow.Visible = false

local SideHeader = Instance.new("Frame")
SideHeader.Parent = SidePanel
SideHeader.Size = UDim2.new(1, 0, 0, 42)
SideHeader.BackgroundTransparency = 1

local SideHeaderLabel = Instance.new("TextLabel")
SideHeaderLabel.Parent = SideHeader
SideHeaderLabel.Size = UDim2.new(1, -22, 1, 0)
SideHeaderLabel.Position = UDim2.new(0, 11, 0, 0)
SideHeaderLabel.BackgroundTransparency = 1
SideHeaderLabel.Font = Enum.Font.GothamBlack
SideHeaderLabel.TextSize = 17
SideHeaderLabel.TextColor3 = TEXT_COLOR
SideHeaderLabel.Text = "3D Preview"
SideHeaderLabel.TextXAlignment = Enum.TextXAlignment.Left

createTooltip(SideHeaderLabel, "Live preview of visual settings in 3D")

safeConnect(SideHeaderLabel.MouseEnter, function()
    TweenService:Create(SideHeaderLabel, TweenInfo.new(0.22, Enum.EasingStyle.Sine), {TextColor3 = ACCENT_COLOR, TextSize = 18}):Play()
end)

safeConnect(SideHeaderLabel.MouseLeave, function()
    TweenService:Create(SideHeaderLabel, TweenInfo.new(0.22, Enum.EasingStyle.Sine), {TextColor3 = TEXT_COLOR, TextSize = 17}):Play()
end)

local PreviewBox = Instance.new("Frame")
PreviewBox.Parent = SidePanel
PreviewBox.Size = UDim2.new(1, -22, 1, -65)
PreviewBox.Position = UDim2.new(0, 11, 0, 52)
PreviewBox.BackgroundColor3 = SAKURA_MEDIUM
addCorner(PreviewBox, 9)
addAdvancedGradient(PreviewBox, {SAKURA_MEDIUM, SAKURA_DEEP, SAKURA_MEDIUM}, 130)
addStroke(PreviewBox, SAKURA_DARK, 2.2, 0.08)

local ViewportFrame = Instance.new("ViewportFrame")
ViewportFrame.Parent = PreviewBox
ViewportFrame.Size = UDim2.new(1, -12, 1, -12)
ViewportFrame.Position = UDim2.new(0, 6, 0, 6)
ViewportFrame.BackgroundColor3 = SAKURA_DARK
ViewportFrame.BackgroundTransparency = 0.05
ViewportFrame.BorderSizePixel = 0
addCorner(ViewportFrame, 7)

ViewportFrame.Ambient = Color3.new(1.25, 1.25, 1.25)
ViewportFrame.LightColor = Color3.new(1.15, 1.15, 1.15)
ViewportFrame.LightDirection = Vector3.new(-0.75, -1.15, -0.75)

local function createPreviewModel()
    ViewportFrame:ClearAllChildren()

    local model = Instance.new("Model")
    model.Name = "PreviewDummy"
    model.Parent = ViewportFrame

    local skinColor = Color3.fromRGB(180, 175, 170)
    local shirtColor = Color3.fromRGB(140, 140, 140)
    local pantsColor = Color3.fromRGB(110, 110, 110)

    local head = Instance.new("Part")
    head.Name = "Head"
    head.Size = Vector3.new(2, 1, 1)
    head.Position = Vector3.new(0, 4.5, 0)
    head.Anchored = true
    head.Color = skinColor
    head.Material = Enum.Material.SmoothPlastic
    head.Parent = model
    
    local headMesh = Instance.new("SpecialMesh")
    headMesh.MeshType = Enum.MeshType.Head
    headMesh.Scale = Vector3.new(1.25, 1.25, 1.25)
    headMesh.Parent = head
    
    local face = Instance.new("Decal")
    face.Texture = "rbxasset://textures/face.png"
    face.Face = Enum.NormalId.Front
    face.Parent = head

    local torso = Instance.new("Part")
    torso.Name = "Torso"
    torso.Size = Vector3.new(2, 2, 1)
    torso.Position = Vector3.new(0, 3, 0)
    torso.Anchored = true
    torso.Color = shirtColor
    torso.Material = Enum.Material.SmoothPlastic
    torso.Parent = model

    local parts = {
        {Name = "Left Arm", Size = Vector3.new(1, 2, 1), Position = Vector3.new(-1.5, 3, 0), Color = skinColor},
        {Name = "Right Arm", Size = Vector3.new(1, 2, 1), Position = Vector3.new(1.5, 3, 0), Color = skinColor},
        {Name = "Left Leg", Size = Vector3.new(1, 2, 1), Position = Vector3.new(-0.5, 1, 0), Color = pantsColor},
        {Name = "Right Leg", Size = Vector3.new(1, 2, 1), Position = Vector3.new(0.5, 1, 0), Color = pantsColor}
    }

    for _, partInfo in ipairs(parts) do
        local part = Instance.new("Part")
        part.Name = partInfo.Name
        part.Size = partInfo.Size
        part.Position = partInfo.Position
        part.Anchored = true
        part.Color = partInfo.Color
        part.Material = Enum.Material.SmoothPlastic
        part.Parent = model
        
        local mesh = Instance.new("BlockMesh")
        mesh.Scale = Vector3.new(1, 1, 1)
        mesh.Parent = part
    end

    model.PrimaryPart = torso
    
    task.wait()

    local camera = Instance.new("Camera")
    camera.CFrame = CFrame.new(Vector3.new(8, 4, 7), Vector3.new(0, 3.2, 0))
    camera.FieldOfView = 45
    camera.Parent = ViewportFrame
    ViewportFrame.CurrentCamera = camera

    local pointLight = Instance.new("PointLight")
    pointLight.Brightness = 2
    pointLight.Range = 20
    pointLight.Color = Color3.fromRGB(255, 245, 250)
    pointLight.Parent = head

    return model
end

local previewModel
local rotationConnection

local function stopPreviewRotation()
    if rotationConnection then
        rotationConnection:Disconnect()
        rotationConnection = nil
    end
end

local function startPreviewRotation()
    if rotationConnection then rotationConnection:Disconnect() end
    
    rotationConnection = RunService.RenderStepped:Connect(function(deltaTime)
        if previewModel and previewModel.Parent and previewModel.PrimaryPart then
            local primaryPart = previewModel.PrimaryPart
            if primaryPart and primaryPart.Parent then
                primaryPart.CFrame = primaryPart.CFrame * CFrame.Angles(0, deltaTime * 0.35, 0)
                
                local headPart = previewModel:FindFirstChild("Head")
                local leftArm = previewModel:FindFirstChild("Left Arm")
                local rightArm = previewModel:FindFirstChild("Right Arm")
                local leftLeg = previewModel:FindFirstChild("Left Leg")
                local rightLeg = previewModel:FindFirstChild("Right Leg")
                
                if headPart then
                    headPart.CFrame = primaryPart.CFrame * CFrame.new(0, 1.5, 0)
                end
                if leftArm then
                    leftArm.CFrame = primaryPart.CFrame * CFrame.new(-1.5, 0, 0)
                end
                if rightArm then
                    rightArm.CFrame = primaryPart.CFrame * CFrame.new(1.5, 0, 0)
                end
                if leftLeg then
                    leftLeg.CFrame = primaryPart.CFrame * CFrame.new(-0.5, -2, 0)
                end
                if rightLeg then
                    rightLeg.CFrame = primaryPart.CFrame * CFrame.new(0.5, -2, 0)
                end
            end
        end
    end)
end

previewModel = createPreviewModel()

safeConnect(SidePanel:GetPropertyChangedSignal("Visible"), function()
    if SidePanel.Visible then
        startPreviewRotation()
        sideShadow.Visible = true
    else
        stopPreviewRotation()
        sideShadow.Visible = false
    end
end)

-- =============================================================================
-- NAVIGATION BUTTONS CREATION (Improved aesthetics for sidebar)
-- =============================================================================

local function createNavButton(info, index)
    local btn = Instance.new("TextButton")
    btn.Name = info.Name .. "Btn"
    btn.Parent = TabsContainer
    btn.Size = SIZE_NORMAL
    btn.LayoutOrder = index
    btn.BackgroundColor3 = SAKURA_LIGHT
    btn.BackgroundTransparency = 0.12
    btn.AutoButtonColor = false
    btn.Text = ""
    addCorner(btn, 14)
    addAdvancedGradient(btn, {SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHT}, 40)
    addStroke(btn, SAKURA_DEEP, 1.2, 0.18)

    local icon = Instance.new("ImageLabel")
    icon.Parent = btn
    icon.BackgroundTransparency = 1
    icon.Image = info.Icon
    icon.Size = UDim2.new(0, 26, 0, 26)
    icon.Position = UDim2.new(0.5, -13, 0.5, -22)
    icon.ImageColor3 = TEXT_COLOR

    local label = Instance.new("TextLabel")
    label.Parent = btn
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, 0, 0, 12)
    label.Position = UDim2.new(0, 0, 1, -18)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 9
    label.TextColor3 = TEXT_COLOR
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.Text = info.Name:upper()

    createTooltip(btn, info.Tooltip or info.Name)

    safeConnect(btn.MouseEnter, function()
        local targetSize = activeTab == btn and SIZE_ACTIVE_HOVER or SIZE_HOVER
        TweenService:Create(btn, TweenInfo.new(0.22, Enum.EasingStyle.Sine), {
            Size = targetSize,
            BackgroundTransparency = 0.06
        }):Play()
        TweenService:Create(icon, TweenInfo.new(0.22), {
            ImageColor3 = ACCENT_COLOR,
            Size = UDim2.new(0, 30, 0, 30),
            Position = UDim2.new(0.5, -15, 0.5, -25)
        }):Play()
        TweenService:Create(label, TweenInfo.new(0.22), {
            TextColor3 = ACCENT_COLOR,
            TextSize = 10
        }):Play()
    end)

    safeConnect(btn.MouseLeave, function()
        local targetSize = activeTab == btn and SIZE_ACTIVE or SIZE_NORMAL
        local targetTransparency = activeTab == btn and 0.03 or 0.12
        TweenService:Create(btn, TweenInfo.new(0.22, Enum.EasingStyle.Sine), {
            Size = targetSize,
            BackgroundTransparency = targetTransparency
        }):Play()
        local targetColor = activeTab == btn and ACCENT_COLOR or TEXT_COLOR
        TweenService:Create(icon, TweenInfo.new(0.22), {
            ImageColor3 = targetColor,
            Size = UDim2.new(0, 26, 0, 26),
            Position = UDim2.new(0.5, -13, 0.5, -22)
        }):Play()
        TweenService:Create(label, TweenInfo.new(0.22), {
            TextColor3 = targetColor,
            TextSize = 9
        }):Play()
    end)

    safeConnect(btn.MouseButton1Click, function()
        if debounceCheck("tabClick", 0.2) then return end
        
        for _, sibling in ipairs(TabsContainer:GetChildren()) do
            if sibling:IsA("TextButton") then
                for _, child in ipairs(sibling:GetChildren()) do
                    if child:IsA("UIStroke") and child.Name ~= "UIStroke" then
                        child:Destroy()
                    end
                end
            end
        end
        
        if activeTab == btn then
            TweenService:Create(btn, TweenInfo.new(0.28, Enum.EasingStyle.Sine), {Size = SIZE_NORMAL, BackgroundTransparency = 0.12}):Play()
            TweenService:Create(icon, TweenInfo.new(0.28), {ImageColor3 = TEXT_COLOR}):Play()
            TweenService:Create(label, TweenInfo.new(0.28), {TextColor3 = TEXT_COLOR}):Play()
            activeTab = nil
            
            for _, panelData in pairs(Panels) do
                if panelData.panel.Visible then
                    TweenService:Create(panelData.panel, TweenInfo.new(0.32, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(panelData.shadow, TweenInfo.new(0.32, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                    task.delay(0.32, function()
                        if panelData.panel.Parent then 
                            panelData.panel.Visible = false 
                            panelData.shadow.Visible = false
                        end
                    end)
                end
            end
            SidePanel.Visible = false
            sideShadow.Visible = false
            stopPreviewRotation()
            showNotification("UI", "All panels closed", 2, "info")
            return
        end

        if activeTab then
            TweenService:Create(activeTab, TweenInfo.new(0.28, Enum.EasingStyle.Sine), {
                Size = SIZE_NORMAL,
                BackgroundTransparency = 0.12
            }):Play()
            local activeIcon = activeTab:FindFirstChild("ImageLabel")
            if activeIcon then
                TweenService:Create(activeIcon, TweenInfo.new(0.28), {ImageColor3 = TEXT_COLOR}):Play()
            end
            local activeLabel = activeTab:FindFirstChild("TextLabel")
            if activeLabel then
                TweenService:Create(activeLabel, TweenInfo.new(0.28), {TextColor3 = TEXT_COLOR}):Play()
            end
        end

        for _, panelData in pairs(Panels) do
            if panelData.panel.Visible then
                TweenService:Create(panelData.panel, TweenInfo.new(0.28, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                TweenService:Create(panelData.shadow, TweenInfo.new(0.28, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                task.delay(0.28, function() 
                    if panelData.panel.Parent then 
                        panelData.panel.Visible = false 
                        panelData.shadow.Visible = false
                    end 
                end)
            end
        end

        local target = Panels[info.Name]
        if target then
            target.panel.Visible = true
            target.shadow.Visible = true
            target.panel.BackgroundTransparency = 1
            target.shadow.BackgroundTransparency = 1
            
            TweenService:Create(target.panel, TweenInfo.new(0.32, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.03}):Play()
            TweenService:Create(target.shadow, TweenInfo.new(0.32, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.9}):Play()
            TweenService:Create(btn, TweenInfo.new(0.28, Enum.EasingStyle.Sine), {
                Size = SIZE_ACTIVE,
                BackgroundTransparency = 0.03
            }):Play()
            TweenService:Create(icon, TweenInfo.new(0.28), {ImageColor3 = ACCENT_COLOR}):Play()
            TweenService:Create(label, TweenInfo.new(0.28), {TextColor3 = ACCENT_COLOR}):Play()
            
            activeTab = btn
            
            addPulseGlow(btn, ACCENT_COLOR)

            if info.Name == "Visuals" then
                SidePanel.Visible = true
                sideShadow.Visible = true
                SidePanel.BackgroundTransparency = 1
                sideShadow.BackgroundTransparency = 1
                TweenService:Create(SidePanel, TweenInfo.new(0.32, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.03}):Play()
                TweenService:Create(sideShadow, TweenInfo.new(0.32, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.9}):Play()
                startPreviewRotation()
            else
                SidePanel.Visible = false
                sideShadow.Visible = false
                stopPreviewRotation()
            end

            showNotification("Tab", "Opened " .. info.Name .. " panel", 2, "success")
        end
    end)

    return btn
end

-- =============================================================================
-- PLAYER INFO DISPLAY (Improved with better styling)
-- =============================================================================

local function addPlayerInfo()
    local bottomFrame = Instance.new("Frame")
    bottomFrame.Name = "BottomInfo"
    bottomFrame.Parent = NavBar
    bottomFrame.BackgroundTransparency = 1
    bottomFrame.Size = UDim2.new(1, 0, 0, 110)
    bottomFrame.Position = UDim2.new(0, 0, 1, -110)

    local infoLabels = {}
    local labelData = {
        {name = "time", text = "11:33 PM", yPos = 0},
        {name = "date", text = "Sep 2", yPos = 20},
        {name = "fps", text = "FPS: --", yPos = 40}
    }

    for _, data in ipairs(labelData) do
        local label = Instance.new("TextLabel")
        label.Parent = bottomFrame
        label.Size = UDim2.new(1, 0, 0, 18)
        label.Position = UDim2.new(0, 0, 0, data.yPos)
        label.BackgroundTransparency = 1
        label.Text = data.text
        label.Font = Enum.Font.GothamMedium
        label.TextSize = 10
        label.TextColor3 = TEXT_COLOR
        label.TextXAlignment = Enum.TextXAlignment.Center
        infoLabels[data.name] = label
    end

    createTooltip(bottomFrame, "Current time, date, and performance metrics")

    task.spawn(function()
        while bottomFrame.Parent do
            infoLabels.time.Text = os.date("%I:%M %p")
            infoLabels.date.Text = os.date("%b %d")
            task.wait(1)
        end
    end)

    local lastFpsUpdate = 0
    safeConnect(RunService.Heartbeat, function(dt)
        local fps = math.floor(1 / dt)
        if os.clock() - lastFpsUpdate >= 0.4 then
            infoLabels.fps.Text = "FPS: " .. fps
            if fps >= 60 then
                infoLabels.fps.TextColor3 = Color3.fromRGB(50, 210, 120)
            elseif fps >= 30 then
                infoLabels.fps.TextColor3 = Color3.fromRGB(245, 200, 20)
            else
                infoLabels.fps.TextColor3 = Color3.fromRGB(235, 80, 65)
            end
            lastFpsUpdate = os.clock()
        end
    end)
end

-- =============================================================================
-- INITIALIZATION AND CONTROLS (Added sound effects)
-- =============================================================================

for i, info in ipairs(navButtons) do
    createNavButton(info, i)
end
addPlayerInfo()

local guiVisible = true
local panelsVisible = true

setEffects(true)

task.delay(1, function()
    enhanceHoverEffects()
end)

adaptiveQuality()

safeConnect(RunService.Heartbeat, function()
    if os.clock() % 8 < 0.1 then
        cleanupUnusedAssets()
    end
end)

TweenService:Create(MainContainer, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Position = UDim2.new(0, 0, 0, 0)
}):Play()

for _ = 1, 18 do createParticle() end
startParticleLoop()

task.delay(0.9, function()
    showNotification("Sakura UI Revamped", "Press TAB to toggle UI | INSERT to hide panels | Drag panels to move", 4, "info")
end)

safeConnect(UserInputService.InputBegan, function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.Tab then
        if debounceCheck("tabToggle", 0.3) then return end
        guiVisible = not guiVisible
        local targetPos = guiVisible and UDim2.new(0, 0, 0, 0) or UDim2.new(0, 0, 1, 0)
        TweenService:Create(MainContainer, TweenInfo.new(0.45, Enum.EasingStyle.Back, guiVisible and Enum.EasingDirection.Out or Enum.EasingDirection.In), {Position = targetPos}):Play()
        
        if not guiVisible then
            clearParticles()
            setEffects(false)
            stopPreviewRotation()
        else
            setEffects(true)
            for _ = 1, 18 do createParticle() end
            startParticleLoop()
            if SidePanel.Visible then
                startPreviewRotation()
            end
        end
        showNotification("UI", guiVisible and "UI shown" or "UI hidden", 2, "info")
        
    elseif input.KeyCode == Enum.KeyCode.Insert then
        if debounceCheck("insertToggle", 0.3) then return end
        panelsVisible = not panelsVisible
        
        if panelsVisible then
            NavBar.Visible = true
            PanelsContainer.Visible = true
            navShadow.Visible = true
            
            TweenService:Create(NavBar, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.03}):Play()
            TweenService:Create(navShadow, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.88}):Play()
            
            for _, panelData in pairs(Panels) do
                if panelData.panel.Visible then
                    panelData.panel.BackgroundTransparency = 1
                    panelData.shadow.BackgroundTransparency = 1
                    TweenService:Create(panelData.panel, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.03}):Play()
                    TweenService:Create(panelData.shadow, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.9}):Play()
                end
            end
            
            if SidePanel.Visible then
                SidePanel.BackgroundTransparency = 1
                sideShadow.BackgroundTransparency = 1
                TweenService:Create(SidePanel, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.03}):Play()
                TweenService:Create(sideShadow, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.9}):Play()
                startPreviewRotation()
            end
            
            Particles.Visible = true
            setEffects(true)
            startParticleLoop()
            showNotification("Panels", "Panels shown", 2, "success")
        else
            TweenService:Create(NavBar, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
            TweenService:Create(navShadow, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
            
            for _, panelData in pairs(Panels) do
                if panelData.panel.Visible then
                    TweenService:Create(panelData.panel, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(panelData.shadow, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                end
            end
            
            if SidePanel.Visible then
                TweenService:Create(SidePanel, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
                TweenService:Create(sideShadow, TweenInfo.new(0.35, Enum.EasingStyle.Sine), {BackgroundTransparency = 1}):Play()
            end
            
            task.delay(0.37, function()
                if not panelsVisible then
                    NavBar.Visible = false
                    PanelsContainer.Visible = false
                    Particles.Visible = false
                    navShadow.Visible = false
                    clearParticles()
                    setEffects(false)
                    stopPreviewRotation()
                    showNotification("Panels", "Panels hidden", 2, "info")
                end
            end)
        end
    end
end)

safeConnect(Player.CharacterAdded, function()
    setEffects(false)
    stopPreviewRotation()
end)

safeConnect(Player.AncestryChanged, function()
    if not Player.Parent then cleanup() end
end)

-- =============================================================================
-- ADDED FEATURES (Improved with sound effects)
-- =============================================================================

local logo = Instance.new("ImageLabel")
logo.Parent = NavBar
logo.BackgroundTransparency = 1
logo.Size = UDim2.new(1, 0, 0, 50)
logo.Position = UDim2.new(0, 0, 0, -60)
logo.Image = "rbxassetid://3564614273"  -- Cherry blossom decal ID
logo.ImageColor3 = SAKURA_ACCENT

local function createSparkleParticle()
    if not Particles or not Particles.Parent then return end
    if #Particles:GetChildren() > MAX_PARTICLES then return end
    
    local particle = Instance.new("Frame")
    local size = math.random(5, 10)
    particle.Size = UDim2.new(0, size, 0, size)
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    
    particle.BackgroundColor3 = WHITE
    particle.BackgroundTransparency = math.random(30, 60) / 100
    particle.ZIndex = 1
    addCorner(particle, 2.5)
    
    addPulseGlow(particle, SAKURA_ACCENT)
    
    particle.Parent = Particles
    
    local duration = 2 + math.random() * 3
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quint)
    local tween = TweenService:Create(particle, tweenInfo, {
        Position = UDim2.new(math.random(), 0, math.random(), 0),
        BackgroundTransparency = 1,
        Rotation = math.random(0, 360)
    })
    tween:Play()
    
    local connection = tween.Completed:Connect(function()
        if particle and particle.Parent then particle:Destroy() end
    end)
    table.insert(particleConnections, connection)
end

local function startParticleLoop()
    particleLoop = safeConnect(RunService.RenderStepped, function()
        if math.random() < 0.009 then createParticle() end
        if math.random() < 0.005 then createSparkleParticle() end
    end)
end

for i = 5, 9 do
    createParallaxLayer(i, 0.08 + (i * 0.08))
end

Lighting.FogColor = SAKURA_LIGHTEST
Lighting.FogStart = 55
Lighting.FogEnd = 210

local splash = Instance.new("Frame")
splash.Name = "Splash"
splash.Parent = ScreenGui
splash.Size = UDim2.new(1, 0, 1, 0)
splash.BackgroundColor3 = SAKURA_DARK
splash.BackgroundTransparency = 0
addAdvancedGradient(splash, {SAKURA_DARK, SAKURA_MEDIUM, SAKURA_LIGHTEST}, 50)

local splashLabel = Instance.new("TextLabel")
splashLabel.Parent = splash
splashLabel.Size = UDim2.new(1, 0, 1, 0)
splashLabel.BackgroundTransparency = 1
splashLabel.Text = "Welcome to Sakura UI Revamped"
splashLabel.Font = Enum.Font.GothamBold
splashLabel.TextSize = 32
splashLabel.TextColor3 = TEXT_COLOR_LIGHT
splashLabel.TextXAlignment = Enum.TextXAlignment.Center
splashLabel.TextYAlignment = Enum.TextYAlignment.Center

TweenService:Create(splash, TweenInfo.new(2.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
    BackgroundTransparency = 1
}):Play()
task.delay(2.2, function()
    splash:Destroy()
end)

safeConnect(UserInputService.InputBegan, function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.One then
        local btn = TabsContainer:FindFirstChild("AimbotBtn")
        if btn then btn.Activated:Fire() end
    elseif input.KeyCode == Enum.KeyCode.Two then
        local btn = TabsContainer:FindFirstChild("VisualsBtn")
        if btn then btn.Activated:Fire() end
    end
end)

local wavePattern = Instance.new("Frame")
wavePattern.Size = UDim2.new(1, 0, 1, 0)
wavePattern.BackgroundTransparency = 1
wavePattern.Parent = MainContainer
wavePattern.ZIndex = -1

local waveGradient = Instance.new("UIGradient")
waveGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, SAKURA_LIGHT),
    ColorSequenceKeypoint.new(0.5, SAKURA_MEDIUM),
    ColorSequenceKeypoint.new(1, SAKURA_LIGHT)
}
waveGradient.Rotation = 85
waveGradient.Parent = wavePattern

TweenService:Create(waveGradient, TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {
    Offset = Vector2.new(0, 1)
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

local function addDecorativeBorder(obj)
    local border = Instance.new("UIStroke")
    border.Thickness = 3
    border.Color = SAKURA_ACCENT
    border.Transparency = 0.45
    border.Parent = obj
end

for _, panelData in pairs(Panels) do
    addDecorativeBorder(panelData.panel)
end

addDecorativeBorder(SidePanel)

local starField = Instance.new("Frame")
starField.Name = "StarField"
starField.Parent = MainContainer
starField.Size = UDim2.new(1, 0, 1, 0)
starField.BackgroundTransparency = 1
starField.ZIndex = -3

do
    for i = 1, 55 do
        local star = Instance.new("Frame")
        local size = math.random(1, 3)
        star.Size = UDim2.new(0, size, 0, size)
        star.Position = UDim2.new(math.random(), 0, math.random(), 0)
        star.BackgroundColor3 = WHITE
        star.BackgroundTransparency = math.random(50, 80) / 100
        addCorner(star, size)
        star.Parent = starField
        
        local twinkleTween = TweenService:Create(star, TweenInfo.new(math.random(1, 3), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
            BackgroundTransparency = 0.9
        })
        twinkleTween:Play()
    end
end

local rotatingLogo = Instance.new("ImageLabel")
rotatingLogo.Parent = PreviewBox
rotatingLogo.Size = UDim2.new(0, 50, 0, 50)
rotatingLogo.Position = UDim2.new(1, -60, 1, -60)
rotatingLogo.BackgroundTransparency = 1
rotatingLogo.Image = "rbxassetid://3564614273"
rotatingLogo.ZIndex = 10

TweenService:Create(rotatingLogo, TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
    Rotation = 360
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

-- =============================================================================
-- ENHANCED KEY SYSTEM (Revamped with smoother animations and cleaner design)
-- =============================================================================

local KeySystemContainer = Instance.new("Frame")
KeySystemContainer.Name = "KeySystemContainer"
KeySystemContainer.Parent = ScreenGui
KeySystemContainer.Size = UDim2.new(0, WIDTH_MAIN + WIDTH_SIDE + GAP + 90, 0, HEIGHT + 90)
KeySystemContainer.Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2, 0.5, -(HEIGHT + 90)/2)
KeySystemContainer.BackgroundTransparency = 1
KeySystemContainer.Visible = true

local MainBackground = Instance.new("Frame")
MainBackground.Name = "MainBackground"
MainBackground.Parent = KeySystemContainer
MainBackground.Size = UDim2.new(1, 0, 1, 0)
MainBackground.BackgroundColor3 = SAKURA_LIGHTEST
MainBackground.BackgroundTransparency = 0.03
addCorner(MainBackground, 28)
addAdvancedGradient(MainBackground, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHT, SAKURA_LIGHTEST}, 40)
addStroke(MainBackground, SAKURA_DEEP, 3.2, 0.08)

local cornerPositions = {
    {x = 0, y = 0},
    {x = 1, y = 0},
    {x = 0, y = 1},
    {x = 1, y = 1}
}

for i, pos in ipairs(cornerPositions) do
    local accent = Instance.new("Frame")
    accent.Size = UDim2.new(0, 85, 0, 85)
    accent.Position = UDim2.new(pos.x, pos.x == 0 and 9 or -94, pos.y, pos.y == 0 and 9 or -94)
    accent.BackgroundTransparency = 0.88
    accent.BackgroundColor3 = SAKURA_ACCENT
    accent.Rotation = i * 90
    addCorner(accent, 16)
    accent.Parent = MainBackground
    accent.ZIndex = -1
    
    TweenService:Create(accent, TweenInfo.new(3.2 + i, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
        BackgroundTransparency = 0.68,
        Rotation = accent.Rotation + 180
    }):Play()
end

local KeyFrame = Instance.new("Frame")
KeyFrame.Name = "KeyFrame"
KeyFrame.Parent = MainBackground
KeyFrame.Size = UDim2.new(0, WIDTH_MAIN + 40, 1, -40)
KeyFrame.Position = UDim2.new(0, 20, 0, 20)
KeyFrame.BackgroundColor3 = SAKURA_LIGHTEST
KeyFrame.BackgroundTransparency = 0.95
addCorner(KeyFrame, 16)
addStroke(KeyFrame, SAKURA_DEEP, 2.2, 0.18)

local keyHeaderContainer = Instance.new("Frame")
keyHeaderContainer.Parent = KeyFrame
keyHeaderContainer.Size = UDim2.new(1, 0, 0, 75)
keyHeaderContainer.BackgroundTransparency = 1

local keyIcon = Instance.new("ImageLabel")
keyIcon.Parent = keyHeaderContainer
keyIcon.Size = UDim2.new(0, 45, 0, 45)
keyIcon.Position = UDim2.new(0, 20, 0, 15)
keyIcon.BackgroundTransparency = 1
keyIcon.Image = "rbxassetid://6031091001"
keyIcon.ImageColor3 = SAKURA_ACCENT

local keyHeader = Instance.new("TextLabel")
keyHeader.Parent = keyHeaderContainer
keyHeader.Size = UDim2.new(1, -100, 0, 40)
keyHeader.Position = UDim2.new(0, 70, 0, 15)
keyHeader.BackgroundTransparency = 1
keyHeader.Text = "PREMIUM ACCESS"
keyHeader.Font = Enum.Font.GothamBlack
keyHeader.TextSize = 22
keyHeader.TextColor3 = SAKURA_DARK
keyHeader.TextXAlignment = Enum.TextXAlignment.Left

local keySubtitle = Instance.new("TextLabel")
keySubtitle.Parent = keyHeaderContainer
keySubtitle.Size = UDim2.new(1, -100, 0, 20)
keySubtitle.Position = UDim2.new(0, 70, 0, 55)
keySubtitle.BackgroundTransparency = 1
keySubtitle.Text = "Enter your key to unlock features"
keySubtitle.Font = Enum.Font.GothamMedium
keySubtitle.TextSize = 13
keySubtitle.TextColor3 = TEXT_COLOR
keySubtitle.TextTransparency = 0.45
keySubtitle.TextXAlignment = Enum.TextXAlignment.Left

local keyInputContainer = Instance.new("Frame")
keyInputContainer.Parent = KeyFrame
keyInputContainer.Size = UDim2.new(1, -40, 0, 55)
keyInputContainer.Position = UDim2.new(0, 20, 0, 100)
keyInputContainer.BackgroundColor3 = SAKURA_LIGHTEST
addCorner(keyInputContainer, 10)
addAdvancedGradient(keyInputContainer, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_LIGHTEST}, 85)
addStroke(keyInputContainer, SAKURA_DEEP, 2.2, 0.08)

local keyInputIcon = Instance.new("ImageLabel")
keyInputIcon.Parent = keyInputContainer
keyInputIcon.Size = UDim2.new(0, 28, 0, 28)
keyInputIcon.Position = UDim2.new(0, 12, 0.5, -14)
keyInputIcon.BackgroundTransparency = 1
keyInputIcon.Image = "rbxassetid://6031094679"
keyInputIcon.ImageColor3 = SAKURA_MEDIUM

local keyInput = Instance.new("TextBox")
keyInput.Parent = keyInputContainer
keyInput.Size = UDim2.new(1, -50, 1, 0)
keyInput.Position = UDim2.new(0, 45, 0, 0)
keyInput.BackgroundTransparency = 1
keyInput.Text = ""
keyInput.PlaceholderText = "Enter your premium key..."
keyInput.Font = Enum.Font.GothamSemibold
keyInput.TextSize = 15
keyInput.TextColor3 = TEXT_COLOR
keyInput.PlaceholderColor3 = Color3.new(TEXT_COLOR.R * 0.6, TEXT_COLOR.G * 0.6, TEXT_COLOR.B * 0.6)
keyInput.TextXAlignment = Enum.TextXAlignment.Left

local submitButton = Instance.new("TextButton")
submitButton.Parent = KeyFrame
submitButton.Size = UDim2.new(1, -40, 0, 45)
submitButton.Position = UDim2.new(0, 20, 0, 170)
submitButton.BackgroundColor3 = SAKURA_ACCENT
submitButton.Text = "UNLOCK"
submitButton.Font = Enum.Font.GothamBlack
submitButton.TextSize = 15
submitButton.TextColor3 = TEXT_COLOR_LIGHT
submitButton.AutoButtonColor = false
addCorner(submitButton, 8)
addAdvancedGradient(submitButton, {SAKURA_ACCENT, SAKURA_DEEP, SAKURA_ACCENT}, 85)
addStroke(submitButton, SAKURA_DARK, 2.2, 0.08)
addPulseGlow(submitButton, SAKURA_ACCENT)

safeConnect(submitButton.MouseEnter, function()
    TweenService:Create(submitButton, TweenInfo.new(0.22), {
        Size = UDim2.new(1, -36, 0, 49),
        Position = UDim2.new(0, 18, 0, 168)
    }):Play()
    TweenService:Create(submitButton, TweenInfo.new(0.32), {
        BackgroundTransparency = 0
    }):Play()
end)

safeConnect(submitButton.MouseLeave, function()
    TweenService:Create(submitButton, TweenInfo.new(0.22), {
        Size = UDim2.new(1, -40, 0, 45),
        Position = UDim2.new(0, 20, 0, 170)
    }):Play()
end)

local statusContainer = Instance.new("Frame")
statusContainer.Parent = KeyFrame
statusContainer.Size = UDim2.new(1, -40, 0, 30)
statusContainer.Position = UDim2.new(0, 20, 1, -35)
statusContainer.BackgroundTransparency = 1

local statusIndicator = Instance.new("Frame")
statusIndicator.Parent = statusContainer
statusIndicator.Size = UDim2.new(0, 10, 0, 10)
statusIndicator.Position = UDim2.new(0, 0, 0.5, -5)
statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
addCorner(statusIndicator, 5)
addPulseGlow(statusIndicator, Color3.fromRGB(245, 200, 20))

local statusText = Instance.new("TextLabel")
statusText.Parent = statusContainer
statusText.Size = UDim2.new(1, -20, 1, 0)
statusText.Position = UDim2.new(0, 20, 0, 0)
statusText.BackgroundTransparency = 1
statusText.Text = "Awaiting key..."
statusText.Font = Enum.Font.GothamMedium
statusText.TextSize = 11
statusText.TextColor3 = TEXT_COLOR
statusText.TextTransparency = 0.45
statusText.TextXAlignment = Enum.TextXAlignment.Left

local CatalogueFrame = Instance.new("Frame")
CatalogueFrame.Name = "CatalogueFrame"
CatalogueFrame.Parent = MainBackground
CatalogueFrame.Size = UDim2.new(0, WIDTH_SIDE + 40, 1, -40)
CatalogueFrame.Position = UDim2.new(0, WIDTH_MAIN + 60, 0, 20)
CatalogueFrame.BackgroundColor3 = SAKURA_LIGHT
CatalogueFrame.BackgroundTransparency = 0.95
addCorner(CatalogueFrame, 16)
addStroke(CatalogueFrame, SAKURA_DEEP, 2.2, 0.18)

local catalogueHeaderContainer = Instance.new("Frame")
catalogueHeaderContainer.Parent = CatalogueFrame
catalogueHeaderContainer.Size = UDim2.new(1, 0, 0, 55)
catalogueHeaderContainer.BackgroundTransparency = 1

local catalogueIcon = Instance.new("ImageLabel")
catalogueIcon.Parent = catalogueHeaderContainer
catalogueIcon.Size = UDim2.new(0, 32, 0, 32)
catalogueIcon.Position = UDim2.new(0, 15, 0, 11)
catalogueIcon.BackgroundTransparency = 1
catalogueIcon.Image = "rbxassetid://6031094670"
catalogueIcon.ImageColor3 = SAKURA_ACCENT

local catalogueHeader = Instance.new("TextLabel")
catalogueHeader.Parent = catalogueHeaderContainer
catalogueHeader.Size = UDim2.new(1, -60, 0, 40)
catalogueHeader.Position = UDim2.new(0, 55, 0, 8)
catalogueHeader.BackgroundTransparency = 1
catalogueHeader.Text = "PREMIUM FEATURES"
catalogueHeader.Font = Enum.Font.GothamBold
catalogueHeader.TextSize = 18
catalogueHeader.TextColor3 = SAKURA_DARK
catalogueHeader.TextXAlignment = Enum.TextXAlignment.Left

local featuresContainer = Instance.new("ScrollingFrame")
featuresContainer.Parent = CatalogueFrame
featuresContainer.Size = UDim2.new(1, -20, 1, -80)
featuresContainer.Position = UDim2.new(0, 10, 0, 55)
featuresContainer.BackgroundTransparency = 1
featuresContainer.ScrollBarThickness = 4
featuresContainer.ScrollBarImageColor3 = SAKURA_MEDIUM
featuresContainer.CanvasSize = UDim2.new(0, 0, 0, 280)

local featuresLayout = Instance.new("UIListLayout")
featuresLayout.Parent = featuresContainer
featuresLayout.Padding = UDim.new(0, 7)

local features = {
    {icon = "🎯", text = "Advanced Aimbot System", desc = "Precision targeting with smooth tracking"},
    {icon = "👁️", text = "Enhanced Visual ESP", desc = "Comprehensive player and item visibility"},
    {icon = "🔄", text = "Real-time 3D Preview", desc = "Live preview of visual settings"},
    {icon = "🎨", text = "Customizable UI Themes", desc = "Personalize your interface"},
    {icon = "⚡", text = "Performance Optimizations", desc = "Smooth experience with FPS boost"},
    {icon = "🔧", text = "Misc Utilities", desc = "Various tools and enhancements"},
    {icon = "🛡️", text = "Security Features", desc = "Advanced protection systems"},
    {icon = "📊", text = "Statistics Dashboard", desc = "Detailed performance metrics"}
}

for i, feature in ipairs(features) do
    local featureFrame = Instance.new("Frame")
    featureFrame.Size = UDim2.new(1, 0, 0, 50)
    featureFrame.BackgroundTransparency = 1
    
    local featureIcon = Instance.new("TextLabel")
    featureIcon.Parent = featureFrame
    featureIcon.Size = UDim2.new(0, 30, 0, 30)
    featureIcon.Position = UDim2.new(0, 0, 0, 10)
    featureIcon.BackgroundTransparency = 1
    featureIcon.Text = feature.icon
    featureIcon.Font = Enum.Font.GothamBold
    featureIcon.TextSize = 16
    featureIcon.TextColor3 = SAKURA_ACCENT
    featureIcon.TextXAlignment = Enum.TextXAlignment.Center
    
    local featureText = Instance.new("TextLabel")
    featureText.Parent = featureFrame
    featureText.Size = UDim2.new(1, -40, 0, 20)
    featureText.Position = UDim2.new(0, 35, 0, 5)
    featureText.BackgroundTransparency = 1
    featureText.Text = feature.text
    featureText.Font = Enum.Font.GothamSemibold
    featureText.TextSize = 12
    featureText.TextColor3 = TEXT_COLOR
    featureText.TextXAlignment = Enum.TextXAlignment.Left
    
    local featureDesc = Instance.new("TextLabel")
    featureDesc.Parent = featureFrame
    featureDesc.Size = UDim2.new(1, -40, 0, 15)
    featureDesc.Position = UDim2.new(0, 35, 0, 25)
    featureDesc.BackgroundTransparency = 1
    featureDesc.Text = feature.desc
    featureDesc.Font = Enum.Font.Gotham
    featureDesc.TextSize = 10
    featureDesc.TextColor3 = Color3.new(TEXT_COLOR.R * 0.7, TEXT_COLOR.G * 0.7, TEXT_COLOR.B * 0.7)
    featureDesc.TextXAlignment = Enum.TextXAlignment.Left
    
    featureFrame.Parent = featuresContainer
end

local footer = Instance.new("Frame")
footer.Parent = CatalogueFrame
footer.Size = UDim2.new(1, 0, 0, 35)
footer.Position = UDim2.new(0, 0, 1, -35)
footer.BackgroundTransparency = 1

local footerText = Instance.new("TextLabel")
footerText.Parent = footer
footerText.Size = UDim2.new(1, -20, 1, 0)
footerText.Position = UDim2.new(0, 10, 0, 0)
footerText.BackgroundTransparency = 1
footerText.Text = "💡 Hint: 'sakura' • Discord for keys"
footerText.Font = Enum.Font.GothamMedium
footerText.TextSize = 9
footerText.TextColor3 = Color3.new(TEXT_COLOR.R * 0.6, TEXT_COLOR.G * 0.6, TEXT_COLOR.B * 0.6)
footerText.TextXAlignment = Enum.TextXAlignment.Center

local keyParticles = Instance.new("Frame")
keyParticles.Parent = MainBackground
keyParticles.Size = UDim2.new(1, 0, 1, 0)
keyParticles.BackgroundTransparency = 1
keyParticles.ZIndex = -1

task.spawn(function()
    while KeySystemContainer and KeySystemContainer.Parent do
        if math.random() < 0.09 then
            local sparkle = Instance.new("Frame")
            local size = math.random(4, 8)
            sparkle.Size = UDim2.new(0, size, 0, size)
            sparkle.Position = UDim2.new(math.random(), 0, math.random(), 0)
            sparkle.BackgroundColor3 = SAKURA_ACCENT
            sparkle.BackgroundTransparency = 0.7
            addCorner(sparkle, size)
            sparkle.Parent = keyParticles
            
            local tweenInfo = TweenInfo.new(2.2, Enum.EasingStyle.Quad)
            local tween = TweenService:Create(sparkle, tweenInfo, {
                Position = UDim2.new(math.random(), 0, math.random(), 0),
                BackgroundTransparency = 1
            })
            tween:Play()
            
            tween.Completed:Connect(function()
                if sparkle.Parent then sparkle:Destroy() end
            end)
        end
        task.wait(0.18)
    end
end)

-- Enhanced key validation logic
safeConnect(submitButton.MouseButton1Click, function()
    if debounceCheck("keySubmit", 1) then return end
    
    local key = keyInput.Text:gsub("%s+", ""):lower()
    if key == "" then
        showNotification("Key System", "Please enter a key", 3, "warning")
        
        local shake = TweenService:Create(keyInputContainer, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 3), {
            Position = UDim2.new(0, 23, 0, 100)
        })
        shake:Play()
        return
    end
    
    submitButton.Text = "VALIDATING..."
    statusText.Text = "Validating..."
    statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
    TweenService:Create(submitButton, TweenInfo.new(0.28), {
        BackgroundColor3 = SAKURA_MEDIUM
    }):Play()
    
    task.spawn(function()
        for i = 1, 3 do
            statusText.Text = "Validating" .. string.rep(".", i)
            task.wait(0.45)
        end
        
        if key == "sakura" then
            statusIndicator.BackgroundColor3 = Color3.fromRGB(50, 210, 120)
            statusText.Text = "Granted!"
            showNotification("Key System", "Unlocked! 🌸", 3, "success")
            
            TweenService:Create(submitButton, TweenInfo.new(0.28), {
                BackgroundColor3 = Color3.fromRGB(50, 210, 120)
            }):Play()
            submitButton.Text = "WELCOME"
            
            for i = 1, 18 do
                createSparkleParticle()
            end
            
            TweenService:Create(KeySystemContainer, TweenInfo.new(1, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0),
                BackgroundTransparency = 1
            }):Play()
            
            task.delay(1, function()
                if KeySystemContainer.Parent then KeySystemContainer:Destroy() end
                
                MainContainer.Visible = true
                TweenService:Create(MainContainer, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                    Position = UDim2.new(0, 0, 0, 0)
                }):Play()
                setEffects(true)
                startParticleLoop()
                showNotification("Sakura UI", "Ready to use! Enjoy the bloom 🌸", 4, "success")
            end)
        else
            statusIndicator.BackgroundColor3 = Color3.fromRGB(235, 80, 65)
            statusText.Text = "Invalid"
            showNotification("Key System", "Invalid key. Try 'sakura'", 3, "error")
            
            TweenService:Create(submitButton, TweenInfo.new(0.28), {
                BackgroundColor3 = Color3.fromRGB(235, 80, 65)
            }):Play()
            submitButton.Text = "TRY AGAIN"
            
            local shake = TweenService:Create(KeySystemContainer, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 4), {
                Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2 - 4, 0.5, -(HEIGHT + 90)/2)
            })
            shake:Play()
            
            task.delay(2, function()
                if submitButton.Parent then
                    submitButton.Text = "UNLOCK"
                    statusText.Text = "Awaiting key..."
                    statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
                    TweenService:Create(submitButton, TweenInfo.new(0.28), {
                        BackgroundColor3 = SAKURA_ACCENT
                    }):Play()
                end
            end)
        end
    end)
end)

safeConnect(keyInput.Focused, function()
    TweenService:Create(keyInputContainer, TweenInfo.new(0.22), {
        BackgroundColor3 = SAKURA_LIGHTEST,
        Size = UDim2.new(1, -36, 0, 59)
    }):Play()
    addPulseGlow(keyInputContainer, SAKURA_ACCENT)
end)

safeConnect(keyInput.FocusLost, function()
    TweenService:Create(keyInputContainer, TweenInfo.new(0.22), {
        BackgroundColor3 = SAKURA_LIGHTEST,
        Size = UDim2.new(1, -40, 0, 55)
    }):Play()
    for _, child in ipairs(keyInputContainer:GetChildren()) do
        if child:IsA("UIStroke") and child.Name ~= "UIStroke" then
            child:Destroy()
        end
    end
end)

makeDraggable(KeySystemContainer, keyHeaderContainer)

KeySystemContainer.Size = UDim2.new(0, 0, 0, 0)
KeySystemContainer.Position = UDim2.new(0.5, 0, 0.5, 0)

TweenService:Create(KeySystemContainer, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, WIDTH_MAIN + WIDTH_SIDE + GAP + 90, 0, HEIGHT + 90),
    Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2, 0.5, -(HEIGHT + 90)/2)
}):Play()

task.delay(3, function()
    if KeySystemContainer and KeySystemContainer.Parent then
        showNotification("Key Hint", "💡 Try 'sakura'", 4, "info")
    end
end)

-- =============================================================================
-- ADDED FEATURES (Improved with sound effects)
-- =============================================================================

local logo = Instance.new("ImageLabel")
logo.Parent = NavBar
logo.BackgroundTransparency = 1
logo.Size = UDim2.new(1, 0, 0, 50)
logo.Position = UDim2.new(0, 0, 0, -60)
logo.Image = "rbxassetid://3564614273"  -- Cherry blossom decal ID
logo.ImageColor3 = SAKURA_ACCENT

local function createSparkleParticle()
    if not Particles or not Particles.Parent then return end
    if #Particles:GetChildren() > MAX_PARTICLES then return end
    
    local particle = Instance.new("Frame")
    local size = math.random(5, 10)
    particle.Size = UDim2.new(0, size, 0, size)
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    
    particle.BackgroundColor3 = WHITE
    particle.BackgroundTransparency = math.random(30, 60) / 100
    particle.ZIndex = 1
    addCorner(particle, 2.5)
    
    addPulseGlow(particle, SAKURA_ACCENT)
    
    particle.Parent = Particles
    
    local duration = 2 + math.random() * 3
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quint)
    local tween = TweenService:Create(particle, tweenInfo, {
        Position = UDim2.new(math.random(), 0, math.random(), 0),
        BackgroundTransparency = 1,
        Rotation = math.random(0, 360)
    })
    tween:Play()
    
    local connection = tween.Completed:Connect(function()
        if particle and particle.Parent then particle:Destroy() end
    end)
    table.insert(particleConnections, connection)
end

local function startParticleLoop()
    particleLoop = safeConnect(RunService.RenderStepped, function()
        if math.random() < 0.009 then createParticle() end
        if math.random() < 0.005 then createSparkleParticle() end
    end)
end

for i = 5, 9 do
    createParallaxLayer(i, 0.08 + (i * 0.08))
end

Lighting.FogColor = SAKURA_LIGHTEST
Lighting.FogStart = 55
Lighting.FogEnd = 210

local splash = Instance.new("Frame")
splash.Name = "Splash"
splash.Parent = ScreenGui
splash.Size = UDim2.new(1, 0, 1, 0)
splash.BackgroundColor3 = SAKURA_DARK
splash.BackgroundTransparency = 0
addAdvancedGradient(splash, {SAKURA_DARK, SAKURA_MEDIUM, SAKURA_LIGHTEST}, 50)

local splashLabel = Instance.new("TextLabel")
splashLabel.Parent = splash
splashLabel.Size = UDim2.new(1, 0, 1, 0)
splashLabel.BackgroundTransparency = 1
splashLabel.Text = "Welcome to Sakura UI Revamped"
splashLabel.Font = Enum.Font.GothamBold
splashLabel.TextSize = 32
splashLabel.TextColor3 = TEXT_COLOR_LIGHT
splashLabel.TextXAlignment = Enum.TextXAlignment.Center
splashLabel.TextYAlignment = Enum.TextYAlignment.Center

TweenService:Create(splash, TweenInfo.new(2.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
    BackgroundTransparency = 1
}):Play()
task.delay(2.2, function()
    splash:Destroy()
end)

safeConnect(UserInputService.InputBegan, function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.One then
        local btn = TabsContainer:FindFirstChild("AimbotBtn")
        if btn then btn.Activated:Fire() end
    elseif input.KeyCode == Enum.KeyCode.Two then
        local btn = TabsContainer:FindFirstChild("VisualsBtn")
        if btn then btn.Activated:Fire() end
    end
end)

local wavePattern = Instance.new("Frame")
wavePattern.Size = UDim2.new(1, 0, 1, 0)
wavePattern.BackgroundTransparency = 1
wavePattern.Parent = MainContainer
wavePattern.ZIndex = -1

local waveGradient = Instance.new("UIGradient")
waveGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, SAKURA_LIGHT),
    ColorSequenceKeypoint.new(0.5, SAKURA_MEDIUM),
    ColorSequenceKeypoint.new(1, SAKURA_LIGHT)
}
waveGradient.Rotation = 85
waveGradient.Parent = wavePattern

TweenService:Create(waveGradient, TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {
    Offset = Vector2.new(0, 1)
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

local function addDecorativeBorder(obj)
    local border = Instance.new("UIStroke")
    border.Thickness = 3
    border.Color = SAKURA_ACCENT
    border.Transparency = 0.45
    border.Parent = obj
end

for _, panelData in pairs(Panels) do
    addDecorativeBorder(panelData.panel)
end

addDecorativeBorder(SidePanel)

local starField = Instance.new("Frame")
starField.Name = "StarField"
starField.Parent = MainContainer
starField.Size = UDim2.new(1, 0, 1, 0)
starField.BackgroundTransparency = 1
starField.ZIndex = -3

do
    for i = 1, 55 do
        local star = Instance.new("Frame")
        local size = math.random(1, 3)
        star.Size = UDim2.new(0, size, 0, size)
        star.Position = UDim2.new(math.random(), 0, math.random(), 0)
        star.BackgroundColor3 = WHITE
        star.BackgroundTransparency = math.random(50, 80) / 100
        addCorner(star, size)
        star.Parent = starField
        
        local twinkleTween = TweenService:Create(star, TweenInfo.new(math.random(1, 3), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
            BackgroundTransparency = 0.9
        })
        twinkleTween:Play()
    end
end

local rotatingLogo = Instance.new("ImageLabel")
rotatingLogo.Parent = PreviewBox
rotatingLogo.Size = UDim2.new(0, 50, 0, 50)
rotatingLogo.Position = UDim2.new(1, -60, 1, -60)
rotatingLogo.BackgroundTransparency = 1
rotatingLogo.Image = "rbxassetid://3564614273"
rotatingLogo.ZIndex = 10

TweenService:Create(rotatingLogo, TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
    Rotation = 360
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

-- =============================================================================
-- ENHANCED KEY SYSTEM (Revamped with smoother animations and cleaner design)
-- =============================================================================

local KeySystemContainer = Instance.new("Frame")
KeySystemContainer.Name = "KeySystemContainer"
KeySystemContainer.Parent = ScreenGui
KeySystemContainer.Size = UDim2.new(0, WIDTH_MAIN + WIDTH_SIDE + GAP + 90, 0, HEIGHT + 90)
KeySystemContainer.Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2, 0.5, -(HEIGHT + 90)/2)
KeySystemContainer.BackgroundTransparency = 1
KeySystemContainer.Visible = true

local MainBackground = Instance.new("Frame")
MainBackground.Name = "MainBackground"
MainBackground.Parent = KeySystemContainer
MainBackground.Size = UDim2.new(1, 0, 1, 0)
MainBackground.BackgroundColor3 = SAKURA_LIGHTEST
MainBackground.BackgroundTransparency = 0.03
addCorner(MainBackground, 28)
addAdvancedGradient(MainBackground, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHT, SAKURA_LIGHTEST}, 40)
addStroke(MainBackground, SAKURA_DEEP, 3.2, 0.08)

local cornerPositions = {
    {x = 0, y = 0},
    {x = 1, y = 0},
    {x = 0, y = 1},
    {x = 1, y = 1}
}

for i, pos in ipairs(cornerPositions) do
    local accent = Instance.new("Frame")
    accent.Size = UDim2.new(0, 85, 0, 85)
    accent.Position = UDim2.new(pos.x, pos.x == 0 and 9 or -94, pos.y, pos.y == 0 and 9 or -94)
    accent.BackgroundTransparency = 0.88
    accent.BackgroundColor3 = SAKURA_ACCENT
    accent.Rotation = i * 90
    addCorner(accent, 16)
    accent.Parent = MainBackground
    accent.ZIndex = -1
    
    TweenService:Create(accent, TweenInfo.new(3.2 + i, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
        BackgroundTransparency = 0.68,
        Rotation = accent.Rotation + 180
    }):Play()
end

local KeyFrame = Instance.new("Frame")
KeyFrame.Name = "KeyFrame"
KeyFrame.Parent = MainBackground
KeyFrame.Size = UDim2.new(0, WIDTH_MAIN + 40, 1, -40)
KeyFrame.Position = UDim2.new(0, 20, 0, 20)
KeyFrame.BackgroundColor3 = SAKURA_LIGHTEST
KeyFrame.BackgroundTransparency = 0.95
addCorner(KeyFrame, 16)
addStroke(KeyFrame, SAKURA_DEEP, 2.2, 0.18)

local keyHeaderContainer = Instance.new("Frame")
keyHeaderContainer.Parent = KeyFrame
keyHeaderContainer.Size = UDim2.new(1, 0, 0, 75)
keyHeaderContainer.BackgroundTransparency = 1

local keyIcon = Instance.new("ImageLabel")
keyIcon.Parent = keyHeaderContainer
keyIcon.Size = UDim2.new(0, 45, 0, 45)
keyIcon.Position = UDim2.new(0, 20, 0, 15)
keyIcon.BackgroundTransparency = 1
keyIcon.Image = "rbxassetid://6031091001"
keyIcon.ImageColor3 = SAKURA_ACCENT

local keyHeader = Instance.new("TextLabel")
keyHeader.Parent = keyHeaderContainer
keyHeader.Size = UDim2.new(1, -100, 0, 40)
keyHeader.Position = UDim2.new(0, 70, 0, 15)
keyHeader.BackgroundTransparency = 1
keyHeader.Text = "PREMIUM ACCESS"
keyHeader.Font = Enum.Font.GothamBlack
keyHeader.TextSize = 22
keyHeader.TextColor3 = SAKURA_DARK
keyHeader.TextXAlignment = Enum.TextXAlignment.Left

local keySubtitle = Instance.new("TextLabel")
keySubtitle.Parent = keyHeaderContainer
keySubtitle.Size = UDim2.new(1, -100, 0, 20)
keySubtitle.Position = UDim2.new(0, 70, 0, 55)
keySubtitle.BackgroundTransparency = 1
keySubtitle.Text = "Enter your key to unlock features"
keySubtitle.Font = Enum.Font.GothamMedium
keySubtitle.TextSize = 13
keySubtitle.TextColor3 = TEXT_COLOR
keySubtitle.TextTransparency = 0.45
keySubtitle.TextXAlignment = Enum.TextXAlignment.Left

local keyInputContainer = Instance.new("Frame")
keyInputContainer.Parent = KeyFrame
keyInputContainer.Size = UDim2.new(1, -40, 0, 55)
keyInputContainer.Position = UDim2.new(0, 20, 0, 100)
keyInputContainer.BackgroundColor3 = SAKURA_LIGHTEST
addCorner(keyInputContainer, 10)
addAdvancedGradient(keyInputContainer, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_LIGHTEST}, 85)
addStroke(keyInputContainer, SAKURA_DEEP, 2.2, 0.08)

local keyInputIcon = Instance.new("ImageLabel")
keyInputIcon.Parent = keyInputContainer
keyInputIcon.Size = UDim2.new(0, 28, 0, 28)
keyInputIcon.Position = UDim2.new(0, 12, 0.5, -14)
keyInputIcon.BackgroundTransparency = 1
keyInputIcon.Image = "rbxassetid://6031094679"
keyInputIcon.ImageColor3 = SAKURA_MEDIUM

local keyInput = Instance.new("TextBox")
keyInput.Parent = keyInputContainer
keyInput.Size = UDim2.new(1, -50, 1, 0)
keyInput.Position = UDim2.new(0, 45, 0, 0)
keyInput.BackgroundTransparency = 1
keyInput.Text = ""
keyInput.PlaceholderText = "Enter your premium key..."
keyInput.Font = Enum.Font.GothamSemibold
keyInput.TextSize = 15
keyInput.TextColor3 = TEXT_COLOR
keyInput.PlaceholderColor3 = Color3.new(TEXT_COLOR.R * 0.6, TEXT_COLOR.G * 0.6, TEXT_COLOR.B * 0.6)
keyInput.TextXAlignment = Enum.TextXAlignment.Left

local submitButton = Instance.new("TextButton")
submitButton.Parent = KeyFrame
submitButton.Size = UDim2.new(1, -40, 0, 45)
submitButton.Position = UDim2.new(0, 20, 0, 170)
submitButton.BackgroundColor3 = SAKURA_ACCENT
submitButton.Text = "UNLOCK"
submitButton.Font = Enum.Font.GothamBlack
submitButton.TextSize = 15
submitButton.TextColor3 = TEXT_COLOR_LIGHT
submitButton.AutoButtonColor = false
addCorner(submitButton, 8)
addAdvancedGradient(submitButton, {SAKURA_ACCENT, SAKURA_DEEP, SAKURA_ACCENT}, 85)
addStroke(submitButton, SAKURA_DARK, 2.2, 0.08)
addPulseGlow(submitButton, SAKURA_ACCENT)

safeConnect(submitButton.MouseEnter, function()
    TweenService:Create(submitButton, TweenInfo.new(0.22), {
        Size = UDim2.new(1, -36, 0, 49),
        Position = UDim2.new(0, 18, 0, 168)
    }):Play()
    TweenService:Create(submitButton, TweenInfo.new(0.32), {
        BackgroundTransparency = 0
    }):Play()
end)

safeConnect(submitButton.MouseLeave, function()
    TweenService:Create(submitButton, TweenInfo.new(0.22), {
        Size = UDim2.new(1, -40, 0, 45),
        Position = UDim2.new(0, 20, 0, 170)
    }):Play()
end)

local statusContainer = Instance.new("Frame")
statusContainer.Parent = KeyFrame
statusContainer.Size = UDim2.new(1, -40, 0, 30)
statusContainer.Position = UDim2.new(0, 20, 1, -35)
statusContainer.BackgroundTransparency = 1

local statusIndicator = Instance.new("Frame")
statusIndicator.Parent = statusContainer
statusIndicator.Size = UDim2.new(0, 10, 0, 10)
statusIndicator.Position = UDim2.new(0, 0, 0.5, -5)
statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
addCorner(statusIndicator, 5)
addPulseGlow(statusIndicator, Color3.fromRGB(245, 200, 20))

local statusText = Instance.new("TextLabel")
statusText.Parent = statusContainer
statusText.Size = UDim2.new(1, -20, 1, 0)
statusText.Position = UDim2.new(0, 20, 0, 0)
statusText.BackgroundTransparency = 1
statusText.Text = "Awaiting key..."
statusText.Font = Enum.Font.GothamMedium
statusText.TextSize = 11
statusText.TextColor3 = TEXT_COLOR
statusText.TextTransparency = 0.45
statusText.TextXAlignment = Enum.TextXAlignment.Left

local CatalogueFrame = Instance.new("Frame")
CatalogueFrame.Name = "CatalogueFrame"
CatalogueFrame.Parent = MainBackground
CatalogueFrame.Size = UDim2.new(0, WIDTH_SIDE + 40, 1, -40)
CatalogueFrame.Position = UDim2.new(0, WIDTH_MAIN + 60, 0, 20)
CatalogueFrame.BackgroundColor3 = SAKURA_LIGHT
CatalogueFrame.BackgroundTransparency = 0.95
addCorner(CatalogueFrame, 16)
addStroke(CatalogueFrame, SAKURA_DEEP, 2.2, 0.18)

local catalogueHeaderContainer = Instance.new("Frame")
catalogueHeaderContainer.Parent = CatalogueFrame
catalogueHeaderContainer.Size = UDim2.new(1, 0, 0, 55)
catalogueHeaderContainer.BackgroundTransparency = 1

local catalogueIcon = Instance.new("ImageLabel")
catalogueIcon.Parent = catalogueHeaderContainer
catalogueIcon.Size = UDim2.new(0, 32, 0, 32)
catalogueIcon.Position = UDim2.new(0, 15, 0, 11)
catalogueIcon.BackgroundTransparency = 1
catalogueIcon.Image = "rbxassetid://6031094670"
catalogueIcon.ImageColor3 = SAKURA_ACCENT

local catalogueHeader = Instance.new("TextLabel")
catalogueHeader.Parent = catalogueHeaderContainer
catalogueHeader.Size = UDim2.new(1, -60, 0, 40)
catalogueHeader.Position = UDim2.new(0, 55, 0, 8)
catalogueHeader.BackgroundTransparency = 1
catalogueHeader.Text = "PREMIUM FEATURES"
catalogueHeader.Font = Enum.Font.GothamBold
catalogueHeader.TextSize = 18
catalogueHeader.TextColor3 = SAKURA_DARK
catalogueHeader.TextXAlignment = Enum.TextXAlignment.Left

local featuresContainer = Instance.new("ScrollingFrame")
featuresContainer.Parent = CatalogueFrame
featuresContainer.Size = UDim2.new(1, -20, 1, -80)
featuresContainer.Position = UDim2.new(0, 10, 0, 55)
featuresContainer.BackgroundTransparency = 1
featuresContainer.ScrollBarThickness = 4
featuresContainer.ScrollBarImageColor3 = SAKURA_MEDIUM
featuresContainer.CanvasSize = UDim2.new(0, 0, 0, 280)

local featuresLayout = Instance.new("UIListLayout")
featuresLayout.Parent = featuresContainer
featuresLayout.Padding = UDim.new(0, 7)

local features = {
    {icon = "🎯", text = "Advanced Aimbot System", desc = "Precision targeting with smooth tracking"},
    {icon = "👁️", text = "Enhanced Visual ESP", desc = "Comprehensive player and item visibility"},
    {icon = "🔄", text = "Real-time 3D Preview", desc = "Live preview of visual settings"},
    {icon = "🎨", text = "Customizable UI Themes", desc = "Personalize your interface"},
    {icon = "⚡", text = "Performance Optimizations", desc = "Smooth experience with FPS boost"},
    {icon = "🔧", text = "Misc Utilities", desc = "Various tools and enhancements"},
    {icon = "🛡️", text = "Security Features", desc = "Advanced protection systems"},
    {icon = "📊", text = "Statistics Dashboard", desc = "Detailed performance metrics"}
}

for i, feature in ipairs(features) do
    local featureFrame = Instance.new("Frame")
    featureFrame.Size = UDim2.new(1, 0, 0, 50)
    featureFrame.BackgroundTransparency = 1
    
    local featureIcon = Instance.new("TextLabel")
    featureIcon.Parent = featureFrame
    featureIcon.Size = UDim2.new(0, 30, 0, 30)
    featureIcon.Position = UDim2.new(0, 0, 0, 10)
    featureIcon.BackgroundTransparency = 1
    featureIcon.Text = feature.icon
    featureIcon.Font = Enum.Font.GothamBold
    featureIcon.TextSize = 16
    featureIcon.TextColor3 = SAKURA_ACCENT
    featureIcon.TextXAlignment = Enum.TextXAlignment.Center
    
    local featureText = Instance.new("TextLabel")
    featureText.Parent = featureFrame
    featureText.Size = UDim2.new(1, -40, 0, 20)
    featureText.Position = UDim2.new(0, 35, 0, 5)
    featureText.BackgroundTransparency = 1
    featureText.Text = feature.text
    featureText.Font = Enum.Font.GothamSemibold
    featureText.TextSize = 12
    featureText.TextColor3 = TEXT_COLOR
    featureText.TextXAlignment = Enum.TextXAlignment.Left
    
    local featureDesc = Instance.new("TextLabel")
    featureDesc.Parent = featureFrame
    featureDesc.Size = UDim2.new(1, -40, 0, 15)
    featureDesc.Position = UDim2.new(0, 35, 0, 25)
    featureDesc.BackgroundTransparency = 1
    featureDesc.Text = feature.desc
    featureDesc.Font = Enum.Font.Gotham
    featureDesc.TextSize = 10
    featureDesc.TextColor3 = Color3.new(TEXT_COLOR.R * 0.7, TEXT_COLOR.G * 0.7, TEXT_COLOR.B * 0.7)
    featureDesc.TextXAlignment = Enum.TextXAlignment.Left
    
    featureFrame.Parent = featuresContainer
end

local footer = Instance.new("Frame")
footer.Parent = CatalogueFrame
footer.Size = UDim2.new(1, 0, 0, 35)
footer.Position = UDim2.new(0, 0, 1, -35)
footer.BackgroundTransparency = 1

local footerText = Instance.new("TextLabel")
footerText.Parent = footer
footerText.Size = UDim2.new(1, -20, 1, 0)
footerText.Position = UDim2.new(0, 10, 0, 0)
footerText.BackgroundTransparency = 1
footerText.Text = "💡 Hint: 'sakura' • Discord for keys"
footerText.Font = Enum.Font.GothamMedium
footerText.TextSize = 9
footerText.TextColor3 = Color3.new(TEXT_COLOR.R * 0.6, TEXT_COLOR.G * 0.6, TEXT_COLOR.B * 0.6)
footerText.TextXAlignment = Enum.TextXAlignment.Center

local keyParticles = Instance.new("Frame")
keyParticles.Parent = MainBackground
keyParticles.Size = UDim2.new(1, 0, 1, 0)
keyParticles.BackgroundTransparency = 1
keyParticles.ZIndex = -1

task.spawn(function()
    while KeySystemContainer and KeySystemContainer.Parent do
        if math.random() < 0.09 then
            local sparkle = Instance.new("Frame")
            local size = math.random(4, 8)
            sparkle.Size = UDim2.new(0, size, 0, size)
            sparkle.Position = UDim2.new(math.random(), 0, math.random(), 0)
            sparkle.BackgroundColor3 = SAKURA_ACCENT
            sparkle.BackgroundTransparency = 0.7
            addCorner(sparkle, size)
            sparkle.Parent = keyParticles
            
            local tweenInfo = TweenInfo.new(2.2, Enum.EasingStyle.Quad)
            local tween = TweenService:Create(sparkle, tweenInfo, {
                Position = UDim2.new(math.random(), 0, math.random(), 0),
                BackgroundTransparency = 1
            })
            tween:Play()
            
            tween.Completed:Connect(function()
                if sparkle.Parent then sparkle:Destroy() end
            end)
        end
        task.wait(0.18)
    end
end)

-- Enhanced key validation logic
safeConnect(submitButton.MouseButton1Click, function()
    if debounceCheck("keySubmit", 1) then return end
    
    local key = keyInput.Text:gsub("%s+", ""):lower()
    if key == "" then
        showNotification("Key System", "Please enter a key", 3, "warning")
        
        local shake = TweenService:Create(keyInputContainer, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 3), {
            Position = UDim2.new(0, 23, 0, 100)
        })
        shake:Play()
        return
    end
    
    submitButton.Text = "VALIDATING..."
    statusText.Text = "Validating..."
    statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
    TweenService:Create(submitButton, TweenInfo.new(0.28), {
        BackgroundColor3 = SAKURA_MEDIUM
    }):Play()
    
    task.spawn(function()
        for i = 1, 3 do
            statusText.Text = "Validating" .. string.rep(".", i)
            task.wait(0.45)
        end
        
        if key == "sakura" then
            statusIndicator.BackgroundColor3 = Color3.fromRGB(50, 210, 120)
            statusText.Text = "Granted!"
            showNotification("Key System", "Unlocked! 🌸", 3, "success")
            
            TweenService:Create(submitButton, TweenInfo.new(0.28), {
                BackgroundColor3 = Color3.fromRGB(50, 210, 120)
            }):Play()
            submitButton.Text = "WELCOME"
            
            for i = 1, 18 do
                createSparkleParticle()
            end
            
            TweenService:Create(KeySystemContainer, TweenInfo.new(1, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0),
                BackgroundTransparency = 1
            }):Play()
            
            task.delay(1, function()
                if KeySystemContainer.Parent then KeySystemContainer:Destroy() end
                
                MainContainer.Visible = true
                TweenService:Create(MainContainer, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                    Position = UDim2.new(0, 0, 0, 0)
                }):Play()
                setEffects(true)
                startParticleLoop()
                showNotification("Sakura UI", "Ready to use! Enjoy the bloom 🌸", 4, "success")
            end)
        else
            statusIndicator.BackgroundColor3 = Color3.fromRGB(235, 80, 65)
            statusText.Text = "Invalid"
            showNotification("Key System", "Invalid key. Try 'sakura'", 3, "error")
            
            TweenService:Create(submitButton, TweenInfo.new(0.28), {
                BackgroundColor3 = Color3.fromRGB(235, 80, 65)
            }):Play()
            submitButton.Text = "TRY AGAIN"
            
            local shake = TweenService:Create(KeySystemContainer, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 4), {
                Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2 - 4, 0.5, -(HEIGHT + 90)/2)
            })
            shake:Play()
            
            task.delay(2, function()
                if submitButton.Parent then
                    submitButton.Text = "UNLOCK"
                    statusText.Text = "Awaiting key..."
                    statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
                    TweenService:Create(submitButton, TweenInfo.new(0.28), {
                        BackgroundColor3 = SAKURA_ACCENT
                    }):Play()
                end
            end)
        end
    end)
end)

safeConnect(keyInput.Focused, function()
    TweenService:Create(keyInputContainer, TweenInfo.new(0.22), {
        BackgroundColor3 = SAKURA_LIGHTEST,
        Size = UDim2.new(1, -36, 0, 59)
    }):Play()
    addPulseGlow(keyInputContainer, SAKURA_ACCENT)
end)

safeConnect(keyInput.FocusLost, function()
    TweenService:Create(keyInputContainer, TweenInfo.new(0.22), {
        BackgroundColor3 = SAKURA_LIGHTEST,
        Size = UDim2.new(1, -40, 0, 55)
    }):Play()
    for _, child in ipairs(keyInputContainer:GetChildren()) do
        if child:IsA("UIStroke") and child.Name ~= "UIStroke" then
            child:Destroy()
        end
    end
end)

makeDraggable(KeySystemContainer, keyHeaderContainer)

KeySystemContainer.Size = UDim2.new(0, 0, 0, 0)
KeySystemContainer.Position = UDim2.new(0.5, 0, 0.5, 0)

TweenService:Create(KeySystemContainer, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, WIDTH_MAIN + WIDTH_SIDE + GAP + 90, 0, HEIGHT + 90),
    Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2, 0.5, -(HEIGHT + 90)/2)
}):Play()

task.delay(3, function()
    if KeySystemContainer and KeySystemContainer.Parent then
        showNotification("Key Hint", "💡 Try 'sakura'", 4, "info")
    end
end)

-- =============================================================================
-- ADDED FEATURES (Improved with sound effects)
-- =============================================================================

local logo = Instance.new("ImageLabel")
logo.Parent = NavBar
logo.BackgroundTransparency = 1
logo.Size = UDim2.new(1, 0, 0, 50)
logo.Position = UDim2.new(0, 0, 0, -60)
logo.Image = "rbxassetid://3564614273"  -- Cherry blossom decal ID
logo.ImageColor3 = SAKURA_ACCENT

local function createSparkleParticle()
    if not Particles or not Particles.Parent then return end
    if #Particles:GetChildren() > MAX_PARTICLES then return end
    
    local particle = Instance.new("Frame")
    local size = math.random(5, 10)
    particle.Size = UDim2.new(0, size, 0, size)
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    
    particle.BackgroundColor3 = WHITE
    particle.BackgroundTransparency = math.random(30, 60) / 100
    particle.ZIndex = 1
    addCorner(particle, 2.5)
    
    addPulseGlow(particle, SAKURA_ACCENT)
    
    particle.Parent = Particles
    
    local duration = 2 + math.random() * 3
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quint)
    local tween = TweenService:Create(particle, tweenInfo, {
        Position = UDim2.new(math.random(), 0, math.random(), 0),
        BackgroundTransparency = 1,
        Rotation = math.random(0, 360)
    })
    tween:Play()
    
    local connection = tween.Completed:Connect(function()
        if particle and particle.Parent then particle:Destroy() end
    end)
    table.insert(particleConnections, connection)
end

local function startParticleLoop()
    particleLoop = safeConnect(RunService.RenderStepped, function()
        if math.random() < 0.009 then createParticle() end
        if math.random() < 0.005 then createSparkleParticle() end
    end)
end

for i = 5, 9 do
    createParallaxLayer(i, 0.08 + (i * 0.08))
end

Lighting.FogColor = SAKURA_LIGHTEST
Lighting.FogStart = 55
Lighting.FogEnd = 210

local splash = Instance.new("Frame")
splash.Name = "Splash"
splash.Parent = ScreenGui
splash.Size = UDim2.new(1, 0, 1, 0)
splash.BackgroundColor3 = SAKURA_DARK
splash.BackgroundTransparency = 0
addAdvancedGradient(splash, {SAKURA_DARK, SAKURA_MEDIUM, SAKURA_LIGHTEST}, 50)

local splashLabel = Instance.new("TextLabel")
splashLabel.Parent = splash
splashLabel.Size = UDim2.new(1, 0, 1, 0)
splashLabel.BackgroundTransparency = 1
splashLabel.Text = "Welcome to Sakura UI Revamped"
splashLabel.Font = Enum.Font.GothamBold
splashLabel.TextSize = 32
splashLabel.TextColor3 = TEXT_COLOR_LIGHT
splashLabel.TextXAlignment = Enum.TextXAlignment.Center
splashLabel.TextYAlignment = Enum.TextYAlignment.Center

TweenService:Create(splash, TweenInfo.new(2.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
    BackgroundTransparency = 1
}):Play()
task.delay(2.2, function()
    splash:Destroy()
end)

safeConnect(UserInputService.InputBegan, function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.One then
        local btn = TabsContainer:FindFirstChild("AimbotBtn")
        if btn then btn.Activated:Fire() end
    elseif input.KeyCode == Enum.KeyCode.Two then
        local btn = TabsContainer:FindFirstChild("VisualsBtn")
        if btn then btn.Activated:Fire() end
    end
end)

local wavePattern = Instance.new("Frame")
wavePattern.Size = UDim2.new(1, 0, 1, 0)
wavePattern.BackgroundTransparency = 1
wavePattern.Parent = MainContainer
wavePattern.ZIndex = -1

local waveGradient = Instance.new("UIGradient")
waveGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, SAKURA_LIGHT),
    ColorSequenceKeypoint.new(0.5, SAKURA_MEDIUM),
    ColorSequenceKeypoint.new(1, SAKURA_LIGHT)
}
waveGradient.Rotation = 85
waveGradient.Parent = wavePattern

TweenService:Create(waveGradient, TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {
    Offset = Vector2.new(0, 1)
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

local function addDecorativeBorder(obj)
    local border = Instance.new("UIStroke")
    border.Thickness = 3
    border.Color = SAKURA_ACCENT
    border.Transparency = 0.45
    border.Parent = obj
end

for _, panelData in pairs(Panels) do
    addDecorativeBorder(panelData.panel)
end

addDecorativeBorder(SidePanel)

local starField = Instance.new("Frame")
starField.Name = "StarField"
starField.Parent = MainContainer
starField.Size = UDim2.new(1, 0, 1, 0)
starField.BackgroundTransparency = 1
starField.ZIndex = -3

do
    for i = 1, 55 do
        local star = Instance.new("Frame")
        local size = math.random(1, 3)
        star.Size = UDim2.new(0, size, 0, size)
        star.Position = UDim2.new(math.random(), 0, math.random(), 0)
        star.BackgroundColor3 = WHITE
        star.BackgroundTransparency = math.random(50, 80) / 100
        addCorner(star, size)
        star.Parent = starField
        
        local twinkleTween = TweenService:Create(star, TweenInfo.new(math.random(1, 3), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
            BackgroundTransparency = 0.9
        })
        twinkleTween:Play()
    end
end

local rotatingLogo = Instance.new("ImageLabel")
rotatingLogo.Parent = PreviewBox
rotatingLogo.Size = UDim2.new(0, 50, 0, 50)
rotatingLogo.Position = UDim2.new(1, -60, 1, -60)
rotatingLogo.BackgroundTransparency = 1
rotatingLogo.Image = "rbxassetid://3564614273"
rotatingLogo.ZIndex = 10

TweenService:Create(rotatingLogo, TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
    Rotation = 360
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

-- =============================================================================
-- ENHANCED KEY SYSTEM (Revamped with smoother animations and cleaner design)
-- =============================================================================

local KeySystemContainer = Instance.new("Frame")
KeySystemContainer.Name = "KeySystemContainer"
KeySystemContainer.Parent = ScreenGui
KeySystemContainer.Size = UDim2.new(0, WIDTH_MAIN + WIDTH_SIDE + GAP + 90, 0, HEIGHT + 90)
KeySystemContainer.Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2, 0.5, -(HEIGHT + 90)/2)
KeySystemContainer.BackgroundTransparency = 1
KeySystemContainer.Visible = true

local MainBackground = Instance.new("Frame")
MainBackground.Name = "MainBackground"
MainBackground.Parent = KeySystemContainer
MainBackground.Size = UDim2.new(1, 0, 1, 0)
MainBackground.BackgroundColor3 = SAKURA_LIGHTEST
MainBackground.BackgroundTransparency = 0.03
addCorner(MainBackground, 28)
addAdvancedGradient(MainBackground, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_MEDIUM, SAKURA_LIGHT, SAKURA_LIGHTEST}, 40)
addStroke(MainBackground, SAKURA_DEEP, 3.2, 0.08)

local cornerPositions = {
    {x = 0, y = 0},
    {x = 1, y = 0},
    {x = 0, y = 1},
    {x = 1, y = 1}
}

for i, pos in ipairs(cornerPositions) do
    local accent = Instance.new("Frame")
    accent.Size = UDim2.new(0, 85, 0, 85)
    accent.Position = UDim2.new(pos.x, pos.x == 0 and 9 or -94, pos.y, pos.y == 0 and 9 or -94)
    accent.BackgroundTransparency = 0.88
    accent.BackgroundColor3 = SAKURA_ACCENT
    accent.Rotation = i * 90
    addCorner(accent, 16)
    accent.Parent = MainBackground
    accent.ZIndex = -1
    
    TweenService:Create(accent, TweenInfo.new(3.2 + i, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
        BackgroundTransparency = 0.68,
        Rotation = accent.Rotation + 180
    }):Play()
end

local KeyFrame = Instance.new("Frame")
KeyFrame.Name = "KeyFrame"
KeyFrame.Parent = MainBackground
KeyFrame.Size = UDim2.new(0, WIDTH_MAIN + 40, 1, -40)
KeyFrame.Position = UDim2.new(0, 20, 0, 20)
KeyFrame.BackgroundColor3 = SAKURA_LIGHTEST
KeyFrame.BackgroundTransparency = 0.95
addCorner(KeyFrame, 16)
addStroke(KeyFrame, SAKURA_DEEP, 2.2, 0.18)

local keyHeaderContainer = Instance.new("Frame")
keyHeaderContainer.Parent = KeyFrame
keyHeaderContainer.Size = UDim2.new(1, 0, 0, 75)
keyHeaderContainer.BackgroundTransparency = 1

local keyIcon = Instance.new("ImageLabel")
keyIcon.Parent = keyHeaderContainer
keyIcon.Size = UDim2.new(0, 45, 0, 45)
keyIcon.Position = UDim2.new(0, 20, 0, 15)
keyIcon.BackgroundTransparency = 1
keyIcon.Image = "rbxassetid://6031091001"
keyIcon.ImageColor3 = SAKURA_ACCENT

local keyHeader = Instance.new("TextLabel")
keyHeader.Parent = keyHeaderContainer
keyHeader.Size = UDim2.new(1, -100, 0, 40)
keyHeader.Position = UDim2.new(0, 70, 0, 15)
keyHeader.BackgroundTransparency = 1
keyHeader.Text = "PREMIUM ACCESS"
keyHeader.Font = Enum.Font.GothamBlack
keyHeader.TextSize = 22
keyHeader.TextColor3 = SAKURA_DARK
keyHeader.TextXAlignment = Enum.TextXAlignment.Left

local keySubtitle = Instance.new("TextLabel")
keySubtitle.Parent = keyHeaderContainer
keySubtitle.Size = UDim2.new(1, -100, 0, 20)
keySubtitle.Position = UDim2.new(0, 70, 0, 55)
keySubtitle.BackgroundTransparency = 1
keySubtitle.Text = "Enter your key to unlock features"
keySubtitle.Font = Enum.Font.GothamMedium
keySubtitle.TextSize = 13
keySubtitle.TextColor3 = TEXT_COLOR
keySubtitle.TextTransparency = 0.45
keySubtitle.TextXAlignment = Enum.TextXAlignment.Left

local keyInputContainer = Instance.new("Frame")
keyInputContainer.Parent = KeyFrame
keyInputContainer.Size = UDim2.new(1, -40, 0, 55)
keyInputContainer.Position = UDim2.new(0, 20, 0, 100)
keyInputContainer.BackgroundColor3 = SAKURA_LIGHTEST
addCorner(keyInputContainer, 10)
addAdvancedGradient(keyInputContainer, {SAKURA_LIGHTEST, SAKURA_LIGHT, SAKURA_LIGHTEST}, 85)
addStroke(keyInputContainer, SAKURA_DEEP, 2.2, 0.08)

local keyInputIcon = Instance.new("ImageLabel")
keyInputIcon.Parent = keyInputContainer
keyInputIcon.Size = UDim2.new(0, 28, 0, 28)
keyInputIcon.Position = UDim2.new(0, 12, 0.5, -14)
keyInputIcon.BackgroundTransparency = 1
keyInputIcon.Image = "rbxassetid://6031094679"
keyInputIcon.ImageColor3 = SAKURA_MEDIUM

local keyInput = Instance.new("TextBox")
keyInput.Parent = keyInputContainer
keyInput.Size = UDim2.new(1, -50, 1, 0)
keyInput.Position = UDim2.new(0, 45, 0, 0)
keyInput.BackgroundTransparency = 1
keyInput.Text = ""
keyInput.PlaceholderText = "Enter your premium key..."
keyInput.Font = Enum.Font.GothamSemibold
keyInput.TextSize = 15
keyInput.TextColor3 = TEXT_COLOR
keyInput.PlaceholderColor3 = Color3.new(TEXT_COLOR.R * 0.6, TEXT_COLOR.G * 0.6, TEXT_COLOR.B * 0.6)
keyInput.TextXAlignment = Enum.TextXAlignment.Left

local submitButton = Instance.new("TextButton")
submitButton.Parent = KeyFrame
submitButton.Size = UDim2.new(1, -40, 0, 45)
submitButton.Position = UDim2.new(0, 20, 0, 170)
submitButton.BackgroundColor3 = SAKURA_ACCENT
submitButton.Text = "UNLOCK"
submitButton.Font = Enum.Font.GothamBlack
submitButton.TextSize = 15
submitButton.TextColor3 = TEXT_COLOR_LIGHT
submitButton.AutoButtonColor = false
addCorner(submitButton, 8)
addAdvancedGradient(submitButton, {SAKURA_ACCENT, SAKURA_DEEP, SAKURA_ACCENT}, 85)
addStroke(submitButton, SAKURA_DARK, 2.2, 0.08)
addPulseGlow(submitButton, SAKURA_ACCENT)

safeConnect(submitButton.MouseEnter, function()
    TweenService:Create(submitButton, TweenInfo.new(0.22), {
        Size = UDim2.new(1, -36, 0, 49),
        Position = UDim2.new(0, 18, 0, 168)
    }):Play()
    TweenService:Create(submitButton, TweenInfo.new(0.32), {
        BackgroundTransparency = 0
    }):Play()
end)

safeConnect(submitButton.MouseLeave, function()
    TweenService:Create(submitButton, TweenInfo.new(0.22), {
        Size = UDim2.new(1, -40, 0, 45),
        Position = UDim2.new(0, 20, 0, 170)
    }):Play()
end)

local statusContainer = Instance.new("Frame")
statusContainer.Parent = KeyFrame
statusContainer.Size = UDim2.new(1, -40, 0, 30)
statusContainer.Position = UDim2.new(0, 20, 1, -35)
statusContainer.BackgroundTransparency = 1

local statusIndicator = Instance.new("Frame")
statusIndicator.Parent = statusContainer
statusIndicator.Size = UDim2.new(0, 10, 0, 10)
statusIndicator.Position = UDim2.new(0, 0, 0.5, -5)
statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
addCorner(statusIndicator, 5)
addPulseGlow(statusIndicator, Color3.fromRGB(245, 200, 20))

local statusText = Instance.new("TextLabel")
statusText.Parent = statusContainer
statusText.Size = UDim2.new(1, -20, 1, 0)
statusText.Position = UDim2.new(0, 20, 0, 0)
statusText.BackgroundTransparency = 1
statusText.Text = "Awaiting key..."
statusText.Font = Enum.Font.GothamMedium
statusText.TextSize = 11
statusText.TextColor3 = TEXT_COLOR
statusText.TextTransparency = 0.45
statusText.TextXAlignment = Enum.TextXAlignment.Left

local CatalogueFrame = Instance.new("Frame")
CatalogueFrame.Name = "CatalogueFrame"
CatalogueFrame.Parent = MainBackground
CatalogueFrame.Size = UDim2.new(0, WIDTH_SIDE + 40, 1, -40)
CatalogueFrame.Position = UDim2.new(0, WIDTH_MAIN + 60, 0, 20)
CatalogueFrame.BackgroundColor3 = SAKURA_LIGHT
CatalogueFrame.BackgroundTransparency = 0.95
addCorner(CatalogueFrame, 16)
addStroke(CatalogueFrame, SAKURA_DEEP, 2.2, 0.18)

local catalogueHeaderContainer = Instance.new("Frame")
catalogueHeaderContainer.Parent = CatalogueFrame
catalogueHeaderContainer.Size = UDim2.new(1, 0, 0, 55)
catalogueHeaderContainer.BackgroundTransparency = 1

local catalogueIcon = Instance.new("ImageLabel")
catalogueIcon.Parent = catalogueHeaderContainer
catalogueIcon.Size = UDim2.new(0, 32, 0, 32)
catalogueIcon.Position = UDim2.new(0, 15, 0, 11)
catalogueIcon.BackgroundTransparency = 1
catalogueIcon.Image = "rbxassetid://6031094670"
catalogueIcon.ImageColor3 = SAKURA_ACCENT

local catalogueHeader = Instance.new("TextLabel")
catalogueHeader.Parent = catalogueHeaderContainer
catalogueHeader.Size = UDim2.new(1, -60, 0, 40)
catalogueHeader.Position = UDim2.new(0, 55, 0, 8)
catalogueHeader.BackgroundTransparency = 1
catalogueHeader.Text = "PREMIUM FEATURES"
catalogueHeader.Font = Enum.Font.GothamBold
catalogueHeader.TextSize = 18
catalogueHeader.TextColor3 = SAKURA_DARK
catalogueHeader.TextXAlignment = Enum.TextXAlignment.Left

local featuresContainer = Instance.new("ScrollingFrame")
featuresContainer.Parent = CatalogueFrame
featuresContainer.Size = UDim2.new(1, -20, 1, -80)
featuresContainer.Position = UDim2.new(0, 10, 0, 55)
featuresContainer.BackgroundTransparency = 1
featuresContainer.ScrollBarThickness = 4
featuresContainer.ScrollBarImageColor3 = SAKURA_MEDIUM
featuresContainer.CanvasSize = UDim2.new(0, 0, 0, 280)

local featuresLayout = Instance.new("UIListLayout")
featuresLayout.Parent = featuresContainer
featuresLayout.Padding = UDim.new(0, 7)

local features = {
    {icon = "🎯", text = "Advanced Aimbot System", desc = "Precision targeting with smooth tracking"},
    {icon = "👁️", text = "Enhanced Visual ESP", desc = "Comprehensive player and item visibility"},
    {icon = "🔄", text = "Real-time 3D Preview", desc = "Live preview of visual settings"},
    {icon = "🎨", text = "Customizable UI Themes", desc = "Personalize your interface"},
    {icon = "⚡", text = "Performance Optimizations", desc = "Smooth experience with FPS boost"},
    {icon = "🔧", text = "Misc Utilities", desc = "Various tools and enhancements"},
    {icon = "🛡️", text = "Security Features", desc = "Advanced protection systems"},
    {icon = "📊", text = "Statistics Dashboard", desc = "Detailed performance metrics"}
}

for i, feature in ipairs(features) do
    local featureFrame = Instance.new("Frame")
    featureFrame.Size = UDim2.new(1, 0, 0, 50)
    featureFrame.BackgroundTransparency = 1
    
    local featureIcon = Instance.new("TextLabel")
    featureIcon.Parent = featureFrame
    featureIcon.Size = UDim2.new(0, 30, 0, 30)
    featureIcon.Position = UDim2.new(0, 0, 0, 10)
    featureIcon.BackgroundTransparency = 1
    featureIcon.Text = feature.icon
    featureIcon.Font = Enum.Font.GothamBold
    featureIcon.TextSize = 16
    featureIcon.TextColor3 = SAKURA_ACCENT
    featureIcon.TextXAlignment = Enum.TextXAlignment.Center
    
    local featureText = Instance.new("TextLabel")
    featureText.Parent = featureFrame
    featureText.Size = UDim2.new(1, -40, 0, 20)
    featureText.Position = UDim2.new(0, 35, 0, 5)
    featureText.BackgroundTransparency = 1
    featureText.Text = feature.text
    featureText.Font = Enum.Font.GothamSemibold
    featureText.TextSize = 12
    featureText.TextColor3 = TEXT_COLOR
    featureText.TextXAlignment = Enum.TextXAlignment.Left
    
    local featureDesc = Instance.new("TextLabel")
    featureDesc.Parent = featureFrame
    featureDesc.Size = UDim2.new(1, -40, 0, 15)
    featureDesc.Position = UDim2.new(0, 35, 0, 25)
    featureDesc.BackgroundTransparency = 1
    featureDesc.Text = feature.desc
    featureDesc.Font = Enum.Font.Gotham
    featureDesc.TextSize = 10
    featureDesc.TextColor3 = Color3.new(TEXT_COLOR.R * 0.7, TEXT_COLOR.G * 0.7, TEXT_COLOR.B * 0.7)
    featureDesc.TextXAlignment = Enum.TextXAlignment.Left
    
    featureFrame.Parent = featuresContainer
end

local footer = Instance.new("Frame")
footer.Parent = CatalogueFrame
footer.Size = UDim2.new(1, 0, 0, 35)
footer.Position = UDim2.new(0, 0, 1, -35)
footer.BackgroundTransparency = 1

local footerText = Instance.new("TextLabel")
footerText.Parent = footer
footerText.Size = UDim2.new(1, -20, 1, 0)
footerText.Position = UDim2.new(0, 10, 0, 0)
footerText.BackgroundTransparency = 1
footerText.Text = "💡 Hint: 'sakura' • Discord for keys"
footerText.Font = Enum.Font.GothamMedium
footerText.TextSize = 9
footerText.TextColor3 = Color3.new(TEXT_COLOR.R * 0.6, TEXT_COLOR.G * 0.6, TEXT_COLOR.B * 0.6)
footerText.TextXAlignment = Enum.TextXAlignment.Center

local keyParticles = Instance.new("Frame")
keyParticles.Parent = MainBackground
keyParticles.Size = UDim2.new(1, 0, 1, 0)
keyParticles.BackgroundTransparency = 1
keyParticles.ZIndex = -1

task.spawn(function()
    while KeySystemContainer and KeySystemContainer.Parent do
        if math.random() < 0.09 then
            local sparkle = Instance.new("Frame")
            local size = math.random(4, 8)
            sparkle.Size = UDim2.new(0, size, 0, size)
            sparkle.Position = UDim2.new(math.random(), 0, math.random(), 0)
            sparkle.BackgroundColor3 = SAKURA_ACCENT
            sparkle.BackgroundTransparency = 0.7
            addCorner(sparkle, size)
            sparkle.Parent = keyParticles
            
            local tweenInfo = TweenInfo.new(2.2, Enum.EasingStyle.Quad)
            local tween = TweenService:Create(sparkle, tweenInfo, {
                Position = UDim2.new(math.random(), 0, math.random(), 0),
                BackgroundTransparency = 1
            })
            tween:Play()
            
            tween.Completed:Connect(function()
                if sparkle.Parent then sparkle:Destroy() end
            end)
        end
        task.wait(0.18)
    end
end)

-- Enhanced key validation logic
safeConnect(submitButton.MouseButton1Click, function()
    if debounceCheck("keySubmit", 1) then return end
    
    local key = keyInput.Text:gsub("%s+", ""):lower()
    if key == "" then
        showNotification("Key System", "Please enter a key", 3, "warning")
        
        local shake = TweenService:Create(keyInputContainer, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 3), {
            Position = UDim2.new(0, 23, 0, 100)
        })
        shake:Play()
        return
    end
    
    submitButton.Text = "VALIDATING..."
    statusText.Text = "Validating..."
    statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
    TweenService:Create(submitButton, TweenInfo.new(0.28), {
        BackgroundColor3 = SAKURA_MEDIUM
    }):Play()
    
    task.spawn(function()
        for i = 1, 3 do
            statusText.Text = "Validating" .. string.rep(".", i)
            task.wait(0.45)
        end
        
        if key == "sakura" then
            statusIndicator.BackgroundColor3 = Color3.fromRGB(50, 210, 120)
            statusText.Text = "Granted!"
            showNotification("Key System", "Unlocked! 🌸", 3, "success")
            
            TweenService:Create(submitButton, TweenInfo.new(0.28), {
                BackgroundColor3 = Color3.fromRGB(50, 210, 120)
            }):Play()
            submitButton.Text = "WELCOME"
            
            for i = 1, 18 do
                createSparkleParticle()
            end
            
            TweenService:Create(KeySystemContainer, TweenInfo.new(1, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0),
                BackgroundTransparency = 1
            }):Play()
            
            task.delay(1, function()
                if KeySystemContainer.Parent then KeySystemContainer:Destroy() end
                
                MainContainer.Visible = true
                TweenService:Create(MainContainer, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                    Position = UDim2.new(0, 0, 0, 0)
                }):Play()
                setEffects(true)
                startParticleLoop()
                showNotification("Sakura UI", "Ready to use! Enjoy the bloom 🌸", 4, "success")
            end)
        else
            statusIndicator.BackgroundColor3 = Color3.fromRGB(235, 80, 65)
            statusText.Text = "Invalid"
            showNotification("Key System", "Invalid key. Try 'sakura'", 3, "error")
            
            TweenService:Create(submitButton, TweenInfo.new(0.28), {
                BackgroundColor3 = Color3.fromRGB(235, 80, 65)
            }):Play()
            submitButton.Text = "TRY AGAIN"
            
            local shake = TweenService:Create(KeySystemContainer, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 4), {
                Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2 - 4, 0.5, -(HEIGHT + 90)/2)
            })
            shake:Play()
            
            task.delay(2, function()
                if submitButton.Parent then
                    submitButton.Text = "UNLOCK"
                    statusText.Text = "Awaiting key..."
                    statusIndicator.BackgroundColor3 = Color3.fromRGB(245, 200, 20)
                    TweenService:Create(submitButton, TweenInfo.new(0.28), {
                        BackgroundColor3 = SAKURA_ACCENT
                    }):Play()
                end
            end)
        end
    end)
end)

safeConnect(keyInput.Focused, function()
    TweenService:Create(keyInputContainer, TweenInfo.new(0.22), {
        BackgroundColor3 = SAKURA_LIGHTEST,
        Size = UDim2.new(1, -36, 0, 59)
    }):Play()
    addPulseGlow(keyInputContainer, SAKURA_ACCENT)
end)

safeConnect(keyInput.FocusLost, function()
    TweenService:Create(keyInputContainer, TweenInfo.new(0.22), {
        BackgroundColor3 = SAKURA_LIGHTEST,
        Size = UDim2.new(1, -40, 0, 55)
    }):Play()
    for _, child in ipairs(keyInputContainer:GetChildren()) do
        if child:IsA("UIStroke") and child.Name ~= "UIStroke" then
            child:Destroy()
        end
    end
end)

makeDraggable(KeySystemContainer, keyHeaderContainer)

KeySystemContainer.Size = UDim2.new(0, 0, 0, 0)
KeySystemContainer.Position = UDim2.new(0.5, 0, 0.5, 0)

TweenService:Create(KeySystemContainer, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, WIDTH_MAIN + WIDTH_SIDE + GAP + 90, 0, HEIGHT + 90),
    Position = UDim2.new(0.5, -(WIDTH_MAIN + WIDTH_SIDE + GAP + 90)/2, 0.5, -(HEIGHT + 90)/2)
}):Play()

task.delay(3, function()
    if KeySystemContainer and KeySystemContainer.Parent then
        showNotification("Key Hint", "💡 Try 'sakura'", 4, "info")
    end
end)

-- =============================================================================
-- ADDED FEATURES (Improved with sound effects)
-- =============================================================================

local logo = Instance.new("ImageLabel")
logo.Parent = NavBar
logo.BackgroundTransparency = 1
logo.Size = UDim2.new(1, 0, 0, 50)
logo.Position = UDim2.new(0, 0, 0, -60)
logo.Image = "rbxassetid://3564614273"  -- Cherry blossom decal ID
logo.ImageColor3 = SAKURA_ACCENT

local function createSparkleParticle()
    if not Particles or not Particles.Parent then return end
    if #Particles:GetChildren() > MAX_PARTICLES then return end
    
    local particle = Instance.new("Frame")
    local size = math.random(5, 10)
    particle.Size = UDim2.new(0, size, 0, size)
    particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
    
    particle.BackgroundColor3 = WHITE
    particle.BackgroundTransparency = math.random(30, 60) / 100
    particle.ZIndex = 1
    addCorner(particle, 2.5)
    
    addPulseGlow(particle, SAKURA_ACCENT)
    
    particle.Parent = Particles
    
    local duration = 2 + math.random() * 3
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quint)
    local tween = TweenService:Create(particle, tweenInfo, {
        Position = UDim2.new(math.random(), 0, math.random(), 0),
        BackgroundTransparency = 1,
        Rotation = math.random(0, 360)
    })
    tween:Play()
    
    local connection = tween.Completed:Connect(function()
        if particle and particle.Parent then particle:Destroy() end
    end)
    table.insert(particleConnections, connection)
end

local function startParticleLoop()
    particleLoop = safeConnect(RunService.RenderStepped, function()
        if math.random() < 0.009 then createParticle() end
        if math.random() < 0.005 then createSparkleParticle() end
    end)
end

for i = 5, 9 do
    createParallaxLayer(i, 0.08 + (i * 0.08))
end

Lighting.FogColor = SAKURA_LIGHTEST
Lighting.FogStart = 55
Lighting.FogEnd = 210

local splash = Instance.new("Frame")
splash.Name = "Splash"
splash.Parent = ScreenGui
splash.Size = UDim2.new(1, 0, 1, 0)
splash.BackgroundColor3 = SAKURA_DARK
splash.BackgroundTransparency = 0
addAdvancedGradient(splash, {SAKURA_DARK, SAKURA_MEDIUM, SAKURA_LIGHTEST}, 50)

local splashLabel = Instance.new("TextLabel")
splashLabel.Parent = splash
splashLabel.Size = UDim2.new(1, 0, 1, 0)
splashLabel.BackgroundTransparency = 1
splashLabel.Text = "Welcome to Sakura UI Revamped"
splashLabel.Font = Enum.Font.GothamBold
splashLabel.TextSize = 32
splashLabel.TextColor3 = TEXT_COLOR_LIGHT
splashLabel.TextXAlignment = Enum.TextXAlignment.Center
splashLabel.TextYAlignment = Enum.TextYAlignment.Center

TweenService:Create(splash, TweenInfo.new(2.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
    BackgroundTransparency = 1
}):Play()
task.delay(2.2, function()
    splash:Destroy()
end)

safeConnect(UserInputService.InputBegan, function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.One then
        local btn = TabsContainer:FindFirstChild("AimbotBtn")
        if btn then btn.Activated:Fire() end
    elseif input.KeyCode == Enum.KeyCode.Two then
        local btn = TabsContainer:FindFirstChild("VisualsBtn")
        if btn then btn.Activated:Fire() end
    end
end)

local wavePattern = Instance.new("Frame")
wavePattern.Size = UDim2.new(1, 0, 1, 0)
wavePattern.BackgroundTransparency = 1
wavePattern.Parent = MainContainer
wavePattern.ZIndex = -1

local waveGradient = Instance.new("UIGradient")
waveGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, SAKURA_LIGHT),
    ColorSequenceKeypoint.new(0.5, SAKURA_MEDIUM),
    ColorSequenceKeypoint.new(1, SAKURA_LIGHT)
}
waveGradient.Rotation = 85
waveGradient.Parent = wavePattern

TweenService:Create(waveGradient, TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true), {
    Offset = Vector2.new(0, 1)
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)

local function addDecorativeBorder(obj)
    local border = Instance.new("UIStroke")
    border.Thickness = 3
    border.Color = SAKURA_ACCENT
    border.Transparency = 0.45
    border.Parent = obj
end

for _, panelData in pairs(Panels) do
    addDecorativeBorder(panelData.panel)
end

addDecorativeBorder(SidePanel)

local starField = Instance.new("Frame")
starField.Name = "StarField"
starField.Parent = MainContainer
starField.Size = UDim2.new(1, 0, 1, 0)
starField.BackgroundTransparency = 1
starField.ZIndex = -3

do
    for i = 1, 55 do
        local star = Instance.new("Frame")
        local size = math.random(1, 3)
        star.Size = UDim2.new(0, size, 0, size)
        star.Position = UDim2.new(math.random(), 0, math.random(), 0)
        star.BackgroundColor3 = WHITE
        star.BackgroundTransparency = math.random(50, 80) / 100
        addCorner(star, size)
        star.Parent = starField
        
        local twinkleTween = TweenService:Create(star, TweenInfo.new(math.random(1, 3), Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
            BackgroundTransparency = 0.9
        })
        twinkleTween:Play()
    end
end

local rotatingLogo = Instance.new("ImageLabel")
rotatingLogo.Parent = PreviewBox
rotatingLogo.Size = UDim2.new(0, 50, 0, 50)
rotatingLogo.Position = UDim2.new(1, -60, 1, -60)
rotatingLogo.BackgroundTransparency = 1
rotatingLogo.Image = "rbxassetid://3564614273"
rotatingLogo.ZIndex = 10

TweenService:Create(rotatingLogo, TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
    Rotation = 360
}):Play()

task.delay(0.5, function()
    if not ScreenGui.Parent then
        warn("ScreenGui detached, cleaning up")
        cleanup()
    end
end)
